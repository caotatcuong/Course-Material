<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0511.0935                               -->
<workbook original-version='18.1' source-build='2021.1.2 (20211.21.0511.0935)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Mission_report_2021_05_20' inline='true' name='federated.1pw637z0o2rlb51aa8k7g0oeit1v' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Mission_report_2021_04_20' name='textscan.1oyzgny1ise4nq13rnt6c0verfpn'>
            <connection class='textscan' directory='E:/HomeWork/DataVisualization/Lab2/covid_data' filename='Mission_report_2021_05_20.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1oyzgny1ise4nq13rnt6c0verfpn' name='Mission_report_2021_05_20.csv' table='[Mission_report_2021_05_20#csv]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1oyzgny1ise4nq13rnt6c0verfpn' name='Mission_report_2021_05_20.csv' table='[Mission_report_2021_05_20#csv]' type='table' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Mission_report_2021_05_20.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_data</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time_data]</local-name>
            <parent-name>[Mission_report_2021_05_20.csv]</parent-name>
            <remote-alias>time_data</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#</remote-name>
            <remote-type>20</remote-type>
            <local-name>[#]</local-name>
            <parent-name>[Mission_report_2021_05_20.csv]</parent-name>
            <remote-alias>#</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country,Other</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country,Other]</local-name>
            <parent-name>[Mission_report_2021_05_20.csv]</parent-name>
            <remote-alias>Country,Other</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalCases]</local-name>
            <parent-name>[Mission_report_2021_05_20.csv]</parent-name>
            <remote-alias>TotalCases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewCases]</local-name>
            <parent-name>[Mission_report_2021_05_20.csv]</parent-name>
            <remote-alias>NewCases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeaths]</local-name>
            <parent-name>[Mission_report_2021_05_20.csv]</parent-name>
            <remote-alias>TotalDeaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewDeaths]</local-name>
            <parent-name>[Mission_report_2021_05_20.csv]</parent-name>
            <remote-alias>NewDeaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalRecovered]</local-name>
            <parent-name>[Mission_report_2021_05_20.csv]</parent-name>
            <remote-alias>TotalRecovered</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewRecovered]</local-name>
            <parent-name>[Mission_report_2021_05_20.csv]</parent-name>
            <remote-alias>NewRecovered</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ActiveCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ActiveCases]</local-name>
            <parent-name>[Mission_report_2021_05_20.csv]</parent-name>
            <remote-alias>ActiveCases</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serious,Critical</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Serious,Critical]</local-name>
            <parent-name>[Mission_report_2021_05_20.csv]</parent-name>
            <remote-alias>Serious,Critical</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tot Cases/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tot Cases/1M pop]</local-name>
            <parent-name>[Mission_report_2021_05_20.csv]</parent-name>
            <remote-alias>Tot Cases/1M pop</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths/1M pop]</local-name>
            <parent-name>[Mission_report_2021_05_20.csv]</parent-name>
            <remote-alias>Deaths/1M pop</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalTests]</local-name>
            <parent-name>[Mission_report_2021_05_20.csv]</parent-name>
            <remote-alias>TotalTests</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests/_1M pop_</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tests/_1M pop_]</local-name>
            <parent-name>[Mission_report_2021_05_20.csv]</parent-name>
            <remote-alias>Tests/_1M pop_</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Mission_report_2021_05_20.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[Mission_report_2021_05_20.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Caseevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Caseevery X ppl]</local-name>
            <parent-name>[Mission_report_2021_05_20.csv]</parent-name>
            <remote-alias>1 Caseevery X ppl</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Deathevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Deathevery X ppl]</local-name>
            <parent-name>[Mission_report_2021_05_20.csv]</parent-name>
            <remote-alias>1 Deathevery X ppl</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Testevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Testevery X ppl]</local-name>
            <parent-name>[Mission_report_2021_05_20.csv]</parent-name>
            <remote-alias>1 Testevery X ppl</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Cases/1M pop]</local-name>
            <parent-name>[Mission_report_2021_05_20.csv]</parent-name>
            <remote-alias>New Cases/1M pop</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths/1M pop]</local-name>
            <parent-name>[Mission_report_2021_05_20.csv]</parent-name>
            <remote-alias>New Deaths/1M pop</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active Cases/1M pop]</local-name>
            <parent-name>[Mission_report_2021_05_20.csv]</parent-name>
            <remote-alias>Active Cases/1M pop</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[#]' role='measure' type='quantitative' />
      <column datatype='integer' name='[1 Caseevery X ppl]' role='measure' type='quantitative' />
      <column datatype='integer' name='[1 Deathevery X ppl]' role='measure' type='quantitative' />
      <column datatype='integer' name='[1 Testevery X ppl]' role='measure' type='quantitative' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[cum:sum:ActiveCases:qk]&quot;' value='Active Cases' />
          <alias key='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[cum:sum:TotalDeaths:qk]&quot;' value='Total Deaths' />
          <alias key='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[cum:sum:TotalRecovered:qk]&quot;' value='Total Recovered' />
        </aliases>
      </column>
      <column datatype='real' name='[Active Cases/1M pop]' role='measure' type='quantitative' />
      <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
      <column caption='Continent1' datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column caption='Country,Other1' datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Deaths/1M pop]' role='measure' type='quantitative' />
      <column datatype='real' name='[New Cases/1M pop]' role='measure' type='quantitative' />
      <column datatype='real' name='[New Deaths/1M pop]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[NewDeaths]' role='measure' type='quantitative' />
      <column caption='New Recovered' datatype='integer' name='[NewRecovered]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Serious,Critical]' role='measure' type='quantitative' />
      <column caption='Tests/ 1M pop' datatype='integer' name='[Tests/_1M pop_]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
      <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[TotalTests]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Tot Cases/1M pop]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Mission_report_2021_05_20.csv' datatype='table' name='[__tableau_internal_object_id__].[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]' role='measure' type='quantitative' />
      <column caption='Time Data' datatype='date' name='[time_data]' role='dimension' type='ordinal' />
      <column-instance column='[__tableau_internal_object_id__].[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ActiveCases]' derivation='Attribute' name='[attr:ActiveCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalCases]' derivation='Attribute' name='[attr:TotalCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ActiveCases]' derivation='Avg' name='[avg:ActiveCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalCases]' derivation='CountD' name='[ctd:TotalCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ActiveCases]' derivation='Sum' name='[cum:sum:ActiveCases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[TotalCases]' derivation='Sum' name='[cum:sum:TotalCases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[TotalDeaths]' derivation='Sum' name='[cum:sum:TotalDeaths:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[TotalRecovered]' derivation='Sum' name='[cum:sum:TotalRecovered:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[TotalCases]' derivation='Median' name='[med:TotalCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ActiveCases]' derivation='None' name='[none:ActiveCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
      <column-instance column='[TotalCases]' derivation='None' name='[none:TotalCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ActiveCases]' derivation='Sum' name='[pcto:sum:ActiveCases:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[NewDeaths]' derivation='Sum' name='[pcto:sum:NewDeaths:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[TotalCases]' derivation='Sum' name='[pcto:sum:TotalCases:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[TotalDeaths]' derivation='Sum' name='[pcto:sum:TotalDeaths:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[TotalRecovered]' derivation='Sum' name='[pcto:sum:TotalRecovered:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[#]' derivation='Sum' name='[sum:#:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1 Caseevery X ppl]' derivation='Sum' name='[sum:1 Caseevery X ppl:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1 Deathevery X ppl]' derivation='Sum' name='[sum:1 Deathevery X ppl:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1 Testevery X ppl]' derivation='Sum' name='[sum:1 Testevery X ppl:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Active Cases/1M pop]' derivation='Sum' name='[sum:Active Cases/1M pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ActiveCases]' derivation='Sum' name='[sum:ActiveCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths/1M pop]' derivation='Sum' name='[sum:Deaths/1M pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Cases/1M pop]' derivation='Sum' name='[sum:New Cases/1M pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Deaths/1M pop]' derivation='Sum' name='[sum:New Deaths/1M pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NewCases]' derivation='Sum' name='[sum:NewCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NewDeaths]' derivation='Sum' name='[sum:NewDeaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NewRecovered]' derivation='Sum' name='[sum:NewRecovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Serious,Critical]' derivation='Sum' name='[sum:Serious,Critical:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Tests/_1M pop_]' derivation='Sum' name='[sum:Tests/_1M pop_:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalRecovered]' derivation='Sum' name='[sum:TotalRecovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalTests]' derivation='Sum' name='[sum:TotalTests:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Tot Cases/1M pop]' derivation='Sum' name='[sum:Tot Cases/1M pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalCases]' derivation='Var' name='[var:TotalCases:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='D:/5 Trực quan hóa dữ liệu/Lab2/Mission_report_2021_04_20.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='05/20/2021 08:59:42 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Mission_report_2021_04_20' increment-value='%null%' refresh-type='create' rows-inserted='222' timestamp-start='2021-05-20 08:59:42.766' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>time_data</remote-name>
              <remote-type>133</remote-type>
              <local-name>[time_data]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>time_data</remote-alias>
              <ordinal>0</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>#</remote-name>
              <remote-type>20</remote-type>
              <local-name>[#]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>#</remote-alias>
              <ordinal>1</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>222</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country,Other</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country,Other]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country,Other</remote-alias>
              <ordinal>2</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>222</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalCases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalCases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalCases</remote-alias>
              <ordinal>3</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>220</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NewCases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NewCases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NewCases</remote-alias>
              <ordinal>4</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>148</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeaths</remote-alias>
              <ordinal>5</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>185</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NewDeaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NewDeaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NewDeaths</remote-alias>
              <ordinal>6</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalRecovered</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalRecovered]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalRecovered</remote-alias>
              <ordinal>7</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>220</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NewRecovered</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NewRecovered]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NewRecovered</remote-alias>
              <ordinal>8</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>133</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ActiveCases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ActiveCases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ActiveCases</remote-alias>
              <ordinal>9</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>201</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Serious,Critical</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Serious,Critical]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Serious,Critical</remote-alias>
              <ordinal>10</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>109</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tot Cases/1M pop</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Tot Cases/1M pop]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Tot Cases/1M pop</remote-alias>
              <ordinal>11</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deaths/1M pop</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Deaths/1M pop]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Deaths/1M pop</remote-alias>
              <ordinal>12</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>166</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalTests</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalTests]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalTests</remote-alias>
              <ordinal>13</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>211</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tests/_1M pop_</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Tests/_1M pop_]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Tests/_1M pop_</remote-alias>
              <ordinal>14</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>15</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>220</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Continent</remote-alias>
              <ordinal>16</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1 Caseevery X ppl</remote-name>
              <remote-type>20</remote-type>
              <local-name>[1 Caseevery X ppl]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>1 Caseevery X ppl</remote-alias>
              <ordinal>17</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>153</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1 Deathevery X ppl</remote-name>
              <remote-type>20</remote-type>
              <local-name>[1 Deathevery X ppl]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>1 Deathevery X ppl</remote-alias>
              <ordinal>18</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>203</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1 Testevery X ppl</remote-name>
              <remote-type>20</remote-type>
              <local-name>[1 Testevery X ppl]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>1 Testevery X ppl</remote-alias>
              <ordinal>19</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>61</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='222' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[pcto:sum:NewDeaths:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:NewDeaths:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:\#:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[attr:ActiveCases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[avg:ActiveCases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[cum:sum:ActiveCases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:ActiveCases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[pcdf:sum:ActiveCases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[pcto:sum:ActiveCases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Active Cases/1M pop:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:ActiveCases:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Tests/_1M pop_:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:NewRecovered:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[__tableau_internal_object_id__].[cnt:Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[__tableau_internal_object_id__].[cnt:Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:New Deaths/1M pop:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:1 Caseevery X ppl:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalTests:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Deaths/1M pop:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[attr:TotalCases:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[ctd:TotalCases:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[cum:sum:TotalCases:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[med:TotalCases:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:TotalCases:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[pcto:sum:TotalCases:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalCases:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[var:TotalCases:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[cum:sum:TotalDeaths:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[pcto:sum:TotalDeaths:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalDeaths:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:New Cases/1M pop:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Tot Cases/1M pop:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Population:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:NewCases:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:1 Deathevery X ppl:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[cum:sum:TotalRecovered:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[pcto:sum:TotalRecovered:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalRecovered:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Serious,Critical:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:1 Testevery X ppl:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Australia/Oceania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country,Other:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St. Barth&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;S. Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turks and Caicos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CAR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DRC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. Vincent Grenadines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Pierre Miquelon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;UAE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Viet Nam&quot;' />
      </semantic-values>
      <filter class='categorical' column='[Country,Other]' filter-group='2'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[Country,Other]' to='&quot;Western Sahara&quot;' />
          <groupfilter from='&quot;Yemen&quot;' function='range' level='[Country,Other]' to='&quot;Zimbabwe&quot;' />
        </groupfilter>
      </filter>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{f01c0307-220d-4af4-b45d-2d92b145c92a}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Active Cases/1M pop:qk]' />
            <field name='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Deaths/1M pop:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Mission_report_2021_04_20.csv' id='Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3'>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
          <object caption='Mission_report_2021_05_20.csv' id='Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829'>
            <properties context=''>
              <relation connection='textscan.1oyzgny1ise4nq13rnt6c0verfpn' name='Mission_report_2021_05_20.csv' table='[Mission_report_2021_05_20#csv]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Mission_report_2021_04_20 (2)' inline='true' name='federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Mission_report_2021_04_20' name='textscan.1oyzgny1ise4nq13rnt6c0verfpn (copy)'>
            <connection class='textscan' directory='E:/HomeWork/DataVisualization/Lab2/covid_data' filename='Mission_report_2021_05_20.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1oyzgny1ise4nq13rnt6c0verfpn (copy)' name='Mission_report_2021_04_20.csv' table='[Mission_report_2021_04_20#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='time_data' ordinal='0' />
            <column datatype='integer' name='#' ordinal='1' />
            <column datatype='string' name='Country,Other' ordinal='2' />
            <column datatype='integer' name='TotalCases' ordinal='3' />
            <column datatype='integer' name='NewCases' ordinal='4' />
            <column datatype='integer' name='TotalDeaths' ordinal='5' />
            <column datatype='integer' name='NewDeaths' ordinal='6' />
            <column datatype='integer' name='TotalRecovered' ordinal='7' />
            <column datatype='integer' name='NewRecovered' ordinal='8' />
            <column datatype='integer' name='ActiveCases' ordinal='9' />
            <column datatype='integer' name='Serious,Critical' ordinal='10' />
            <column datatype='integer' name='Tot Cases/1M pop' ordinal='11' />
            <column datatype='real' name='Deaths/1M pop' ordinal='12' />
            <column datatype='integer' name='TotalTests' ordinal='13' />
            <column datatype='integer' name='Tests/_1M pop_' ordinal='14' />
            <column datatype='integer' name='Population' ordinal='15' />
            <column datatype='string' name='Continent' ordinal='16' />
            <column datatype='integer' name='1 Caseevery X ppl' ordinal='17' />
            <column datatype='integer' name='1 Deathevery X ppl' ordinal='18' />
            <column datatype='integer' name='1 Testevery X ppl' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1oyzgny1ise4nq13rnt6c0verfpn (copy)' name='Mission_report_2021_04_20.csv' table='[Mission_report_2021_04_20#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='time_data' ordinal='0' />
            <column datatype='integer' name='#' ordinal='1' />
            <column datatype='string' name='Country,Other' ordinal='2' />
            <column datatype='integer' name='TotalCases' ordinal='3' />
            <column datatype='integer' name='NewCases' ordinal='4' />
            <column datatype='integer' name='TotalDeaths' ordinal='5' />
            <column datatype='integer' name='NewDeaths' ordinal='6' />
            <column datatype='integer' name='TotalRecovered' ordinal='7' />
            <column datatype='integer' name='NewRecovered' ordinal='8' />
            <column datatype='integer' name='ActiveCases' ordinal='9' />
            <column datatype='integer' name='Serious,Critical' ordinal='10' />
            <column datatype='integer' name='Tot Cases/1M pop' ordinal='11' />
            <column datatype='real' name='Deaths/1M pop' ordinal='12' />
            <column datatype='integer' name='TotalTests' ordinal='13' />
            <column datatype='integer' name='Tests/_1M pop_' ordinal='14' />
            <column datatype='integer' name='Population' ordinal='15' />
            <column datatype='string' name='Continent' ordinal='16' />
            <column datatype='integer' name='1 Caseevery X ppl' ordinal='17' />
            <column datatype='integer' name='1 Deathevery X ppl' ordinal='18' />
            <column datatype='integer' name='1 Testevery X ppl' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Mission_report_2021_04_20.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_data</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time_data]</local-name>
            <parent-name>[Mission_report_2021_04_20.csv]</parent-name>
            <remote-alias>time_data</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#</remote-name>
            <remote-type>20</remote-type>
            <local-name>[#]</local-name>
            <parent-name>[Mission_report_2021_04_20.csv]</parent-name>
            <remote-alias>#</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country,Other</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country,Other]</local-name>
            <parent-name>[Mission_report_2021_04_20.csv]</parent-name>
            <remote-alias>Country,Other</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalCases]</local-name>
            <parent-name>[Mission_report_2021_04_20.csv]</parent-name>
            <remote-alias>TotalCases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewCases]</local-name>
            <parent-name>[Mission_report_2021_04_20.csv]</parent-name>
            <remote-alias>NewCases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeaths]</local-name>
            <parent-name>[Mission_report_2021_04_20.csv]</parent-name>
            <remote-alias>TotalDeaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewDeaths]</local-name>
            <parent-name>[Mission_report_2021_04_20.csv]</parent-name>
            <remote-alias>NewDeaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalRecovered]</local-name>
            <parent-name>[Mission_report_2021_04_20.csv]</parent-name>
            <remote-alias>TotalRecovered</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewRecovered]</local-name>
            <parent-name>[Mission_report_2021_04_20.csv]</parent-name>
            <remote-alias>NewRecovered</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ActiveCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ActiveCases]</local-name>
            <parent-name>[Mission_report_2021_04_20.csv]</parent-name>
            <remote-alias>ActiveCases</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serious,Critical</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Serious,Critical]</local-name>
            <parent-name>[Mission_report_2021_04_20.csv]</parent-name>
            <remote-alias>Serious,Critical</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tot Cases/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tot Cases/1M pop]</local-name>
            <parent-name>[Mission_report_2021_04_20.csv]</parent-name>
            <remote-alias>Tot Cases/1M pop</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths/1M pop]</local-name>
            <parent-name>[Mission_report_2021_04_20.csv]</parent-name>
            <remote-alias>Deaths/1M pop</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalTests]</local-name>
            <parent-name>[Mission_report_2021_04_20.csv]</parent-name>
            <remote-alias>TotalTests</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests/_1M pop_</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tests/_1M pop_]</local-name>
            <parent-name>[Mission_report_2021_04_20.csv]</parent-name>
            <remote-alias>Tests/_1M pop_</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Mission_report_2021_04_20.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[Mission_report_2021_04_20.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Caseevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Caseevery X ppl]</local-name>
            <parent-name>[Mission_report_2021_04_20.csv]</parent-name>
            <remote-alias>1 Caseevery X ppl</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Deathevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Deathevery X ppl]</local-name>
            <parent-name>[Mission_report_2021_04_20.csv]</parent-name>
            <remote-alias>1 Deathevery X ppl</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Testevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Testevery X ppl]</local-name>
            <parent-name>[Mission_report_2021_04_20.csv]</parent-name>
            <remote-alias>1 Testevery X ppl</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[#]' role='measure' type='quantitative' />
      <column datatype='integer' name='[1 Caseevery X ppl]' role='measure' type='quantitative' />
      <column datatype='integer' name='[1 Deathevery X ppl]' role='measure' type='quantitative' />
      <column datatype='integer' name='[1 Testevery X ppl]' role='measure' type='quantitative' />
      <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
      <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Deaths/1M pop]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[NewDeaths]' role='measure' type='quantitative' />
      <column caption='New Recovered' datatype='integer' name='[NewRecovered]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Serious,Critical]' role='measure' type='quantitative' />
      <column caption='Tests/ 1M pop' datatype='integer' name='[Tests/_1M pop_]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
      <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[TotalTests]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Tot Cases/1M pop]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Mission_report_2021_04_20.csv' datatype='table' name='[__tableau_internal_object_id__].[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]' role='measure' type='quantitative' />
      <column caption='Time Data' datatype='date' name='[time_data]' role='dimension' type='ordinal' />
      <column-instance column='[__tableau_internal_object_id__].[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ActiveCases]' derivation='Attribute' name='[attr:ActiveCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalCases]' derivation='Attribute' name='[attr:TotalCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ActiveCases]' derivation='Avg' name='[avg:ActiveCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalCases]' derivation='CountD' name='[ctd:TotalCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalCases]' derivation='Median' name='[med:TotalCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ActiveCases]' derivation='None' name='[none:ActiveCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
      <column-instance column='[TotalCases]' derivation='None' name='[none:TotalCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ActiveCases]' derivation='Sum' name='[pcdf:sum:ActiveCases:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ActiveCases]' derivation='Sum' name='[pcto:sum:ActiveCases:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[TotalCases]' derivation='Sum' name='[pcto:sum:TotalCases:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[#]' derivation='Sum' name='[sum:#:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1 Caseevery X ppl]' derivation='Sum' name='[sum:1 Caseevery X ppl:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1 Deathevery X ppl]' derivation='Sum' name='[sum:1 Deathevery X ppl:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1 Testevery X ppl]' derivation='Sum' name='[sum:1 Testevery X ppl:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ActiveCases]' derivation='Sum' name='[sum:ActiveCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths/1M pop]' derivation='Sum' name='[sum:Deaths/1M pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NewCases]' derivation='Sum' name='[sum:NewCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NewDeaths]' derivation='Sum' name='[sum:NewDeaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NewRecovered]' derivation='Sum' name='[sum:NewRecovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Serious,Critical]' derivation='Sum' name='[sum:Serious,Critical:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Tests/_1M pop_]' derivation='Sum' name='[sum:Tests/_1M pop_:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalRecovered]' derivation='Sum' name='[sum:TotalRecovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalTests]' derivation='Sum' name='[sum:TotalTests:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Tot Cases/1M pop]' derivation='Sum' name='[sum:Tot Cases/1M pop:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='D:/5 Trực quan hóa dữ liệu/Lab2/Mission_report_2021_04_20 copy 1.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='05/20/2021 08:59:42 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Mission_report_2021_04_20' increment-value='%null%' refresh-type='create' rows-inserted='222' timestamp-start='2021-05-20 08:59:42.766' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>time_data</remote-name>
              <remote-type>133</remote-type>
              <local-name>[time_data]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>time_data</remote-alias>
              <ordinal>0</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>#</remote-name>
              <remote-type>20</remote-type>
              <local-name>[#]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>#</remote-alias>
              <ordinal>1</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>222</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country,Other</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country,Other]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country,Other</remote-alias>
              <ordinal>2</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>222</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalCases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalCases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalCases</remote-alias>
              <ordinal>3</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>220</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NewCases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NewCases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NewCases</remote-alias>
              <ordinal>4</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>148</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeaths</remote-alias>
              <ordinal>5</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>185</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NewDeaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NewDeaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NewDeaths</remote-alias>
              <ordinal>6</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalRecovered</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalRecovered]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalRecovered</remote-alias>
              <ordinal>7</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>220</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NewRecovered</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NewRecovered]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NewRecovered</remote-alias>
              <ordinal>8</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>133</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ActiveCases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ActiveCases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ActiveCases</remote-alias>
              <ordinal>9</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>201</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Serious,Critical</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Serious,Critical]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Serious,Critical</remote-alias>
              <ordinal>10</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>109</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tot Cases/1M pop</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Tot Cases/1M pop]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Tot Cases/1M pop</remote-alias>
              <ordinal>11</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deaths/1M pop</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Deaths/1M pop]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Deaths/1M pop</remote-alias>
              <ordinal>12</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>166</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalTests</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalTests]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalTests</remote-alias>
              <ordinal>13</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>211</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tests/_1M pop_</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Tests/_1M pop_]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Tests/_1M pop_</remote-alias>
              <ordinal>14</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>15</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>220</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Continent</remote-alias>
              <ordinal>16</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1 Caseevery X ppl</remote-name>
              <remote-type>20</remote-type>
              <local-name>[1 Caseevery X ppl]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>1 Caseevery X ppl</remote-alias>
              <ordinal>17</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>153</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1 Deathevery X ppl</remote-name>
              <remote-type>20</remote-type>
              <local-name>[1 Deathevery X ppl]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>1 Deathevery X ppl</remote-alias>
              <ordinal>18</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>203</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1 Testevery X ppl</remote-name>
              <remote-type>20</remote-type>
              <local-name>[1 Testevery X ppl]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>1 Testevery X ppl</remote-alias>
              <ordinal>19</ordinal>
              <family>Mission_report_2021_04_20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>61</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='222' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Australia/Oceania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country,Other:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DRC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. Barth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;S. Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Vincent Grenadines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CAR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Pierre Miquelon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;UAE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:NewDeaths:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:\#:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[attr:ActiveCases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[avg:ActiveCases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[none:ActiveCases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[pcdf:sum:ActiveCases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[pcto:sum:ActiveCases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:ActiveCases:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:Tests/_1M pop_:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:NewRecovered:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[__tableau_internal_object_id__].[cnt:Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:1 Caseevery X ppl:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:TotalTests:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:Deaths/1M pop:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[attr:TotalCases:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[ctd:TotalCases:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[med:TotalCases:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[none:TotalCases:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[pcto:sum:TotalCases:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:TotalCases:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:TotalDeaths:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:Tot Cases/1M pop:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:Population:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:NewCases:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:1 Deathevery X ppl:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:TotalRecovered:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:Serious,Critical:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:1 Testevery X ppl:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Viet Nam&quot;' />
      </semantic-values>
      <filter class='categorical' column='[Country,Other]' filter-group='2'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[Country,Other]' to='&quot;Western Sahara&quot;' />
          <groupfilter from='&quot;Yemen&quot;' function='range' level='[Country,Other]' to='&quot;Zimbabwe&quot;' />
        </groupfilter>
      </filter>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Mission_report_2021_04_20.csv' id='Mission_report_2021_04_20.csv_B87326086A9B493EB5E8008E167DF4D3'>
            <properties context=''>
              <relation connection='textscan.1oyzgny1ise4nq13rnt6c0verfpn (copy)' name='Mission_report_2021_04_20.csv' table='[Mission_report_2021_04_20#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='time_data' ordinal='0' />
                  <column datatype='integer' name='#' ordinal='1' />
                  <column datatype='string' name='Country,Other' ordinal='2' />
                  <column datatype='integer' name='TotalCases' ordinal='3' />
                  <column datatype='integer' name='NewCases' ordinal='4' />
                  <column datatype='integer' name='TotalDeaths' ordinal='5' />
                  <column datatype='integer' name='NewDeaths' ordinal='6' />
                  <column datatype='integer' name='TotalRecovered' ordinal='7' />
                  <column datatype='integer' name='NewRecovered' ordinal='8' />
                  <column datatype='integer' name='ActiveCases' ordinal='9' />
                  <column datatype='integer' name='Serious,Critical' ordinal='10' />
                  <column datatype='integer' name='Tot Cases/1M pop' ordinal='11' />
                  <column datatype='real' name='Deaths/1M pop' ordinal='12' />
                  <column datatype='integer' name='TotalTests' ordinal='13' />
                  <column datatype='integer' name='Tests/_1M pop_' ordinal='14' />
                  <column datatype='integer' name='Population' ordinal='15' />
                  <column datatype='string' name='Continent' ordinal='16' />
                  <column datatype='integer' name='1 Caseevery X ppl' ordinal='17' />
                  <column datatype='integer' name='1 Deathevery X ppl' ordinal='18' />
                  <column datatype='integer' name='1 Testevery X ppl' ordinal='19' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_A3C020F4E3F04333B5C010E2E8A33883]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Total Cases' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Country\,Other1' />
        <param name='target' value='Total Cases' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name=' Case Fatality Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Top 10 &lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mission_report_2021_05_20' name='federated.1pw637z0o2rlb51aa8k7g0oeit1v' />
          </datasources>
          <datasource-dependencies datasource='federated.1pw637z0o2rlb51aa8k7g0oeit1v'>
            <column caption='SUM([Total Deaths])/SUM([Total Cases])' datatype='real' name='[Calculation_483011105602940929]' role='measure' type='quantitative' user:unnamed='Sheet 17'>
              <calculation class='tableau' formula='SUM([TotalDeaths])/SUM([TotalCases])' />
            </column>
            <column caption='Country,Other1' datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_483011105602940929]' derivation='User' name='[usr:Calculation_483011105602940929:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end'>
              <groupfilter direction='DESC' expression='SUM([TotalDeaths])/SUM([TotalCases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country,Other:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[usr:Calculation_483011105602940929:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[usr:Calculation_483011105602940929:qk]' scope='rows' value=' Case Fatality Rate' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[usr:Calculation_483011105602940929:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[usr:Calculation_483011105602940929:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[usr:Calculation_483011105602940929:qk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[usr:Calculation_483011105602940929:qk]</rows>
        <cols>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]</cols>
      </table>
      <simple-id uuid='{DFB41365-47E4-4D37-A2A5-678F0AAF8985}' />
    </worksheet>
    <worksheet name=' Case Fatality Rate/Total deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mission_report_2021_05_20' name='federated.1pw637z0o2rlb51aa8k7g0oeit1v' />
          </datasources>
          <datasource-dependencies datasource='federated.1pw637z0o2rlb51aa8k7g0oeit1v'>
            <column caption='SUM([Total Deaths])/SUM([Total Cases])' datatype='real' name='[Calculation_269090123304673281]' role='measure' type='quantitative' user:unnamed='Sheet 18'>
              <calculation class='tableau' formula='SUM([TotalDeaths])/SUM([TotalCases])' />
            </column>
            <column caption='SUM([Total Deaths])/SUM([Total Cases])' datatype='real' name='[Calculation_269090123305947139]' role='measure' type='quantitative' user:unnamed='Sheet 18'>
              <calculation class='tableau' formula='SUM([TotalDeaths])/SUM([TotalCases])' />
            </column>
            <column caption='Country,Other1' datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_269090123304673281]' derivation='User' name='[usr:Calculation_269090123304673281:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_269090123305947139]' derivation='User' name='[usr:Calculation_269090123305947139:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalDeaths:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalDeaths:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[usr:Calculation_269090123304673281:qk]' scope='rows' value=' Case Fatality Rate' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[usr:Calculation_269090123304673281:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[usr:Calculation_269090123304673281:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[usr:Calculation_269090123304673281:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' />
              <size column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[usr:Calculation_269090123305947139:qk]' />
              <text column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[usr:Calculation_269090123304673281:qk]</rows>
        <cols>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalDeaths:qk]</cols>
      </table>
      <simple-id uuid='{855DD557-AE3A-432C-95C5-91C5D2B1B8C3}' />
    </worksheet>
    <worksheet name='Deaths/1M and Active case/1M'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Deaths/1M and Active case/1M (Clustering)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mission_report_2021_05_20' name='federated.1pw637z0o2rlb51aa8k7g0oeit1v' />
          </datasources>
          <datasource-dependencies datasource='federated.1pw637z0o2rlb51aa8k7g0oeit1v'>
            <column datatype='real' name='[Active Cases/1M pop]' role='measure' type='quantitative' />
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{f01c0307-220d-4af4-b45d-2d92b145c92a}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column caption='Country,Other1' datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Deaths/1M pop]' role='measure' type='quantitative' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[Active Cases/1M pop]' derivation='Sum' name='[sum:Active Cases/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths/1M pop]' derivation='Sum' name='[sum:Deaths/1M pop:qk]' pivot='key' type='quantitative' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>0</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Active Cases/1M pop:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Deaths/1M pop:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Deaths/1M pop:qk]</column>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Active Cases/1M pop:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:AdhocCluster:1:ok]' />
              <size column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Deaths/1M pop:qk]' />
              <text column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Active Cases/1M pop:qk]</rows>
        <cols>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Deaths/1M pop:qk]</cols>
      </table>
      <simple-id uuid='{D4293A35-A997-42B3-BE66-B1066800492C}' />
    </worksheet>
    <worksheet name='New Case/continent(bar)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Mission_report_2021_05_20' name='federated.1pw637z0o2rlb51aa8k7g0oeit1v' />
          </datasources>
          <datasource-dependencies datasource='federated.1pw637z0o2rlb51aa8k7g0oeit1v'>
            <column caption='Continent1' datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[NewCases]' derivation='Sum' name='[sum:NewCases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Continent:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Continent:nk]' />
              <groupfilter function='member' level='[none:Continent:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Continent:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:NewCases:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:NewCases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:NewCases:qk]</rows>
        <cols>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Continent:nk]</cols>
      </table>
      <simple-id uuid='{BE655D32-4059-4A73-A722-BC7F7BA84305}' />
    </worksheet>
    <worksheet name='New Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Top 20 New Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mission_report_2021_05_20' name='federated.1pw637z0o2rlb51aa8k7g0oeit1v' />
          </datasources>
          <datasource-dependencies datasource='federated.1pw637z0o2rlb51aa8k7g0oeit1v'>
            <column caption='Country,Other1' datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[NewCases]' derivation='Sum' name='[sum:NewCases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([NewCases])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country,Other:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' direction='DESC' using='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:NewCases:qk]' />
          <filter class='quantitative' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:NewCases:qk]' included-values='in-range'>
            <min>1</min>
            <max>259269</max>
          </filter>
          <slices>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]</column>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:NewCases:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:NewCases:qk]' />
              <text column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' />
              <text column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:NewCases:qk]' />
              <color column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7DC17B02-C7FF-4074-BB43-9064B8220DAF}' />
    </worksheet>
    <worksheet name='New Death'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Top 10 new deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mission_report_2021_05_20' name='federated.1pw637z0o2rlb51aa8k7g0oeit1v' />
          </datasources>
          <datasource-dependencies datasource='federated.1pw637z0o2rlb51aa8k7g0oeit1v'>
            <column caption='Country,Other1' datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='New Deaths' datatype='integer' name='[NewDeaths]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[NewDeaths]' derivation='Sum' name='[sum:NewDeaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([NewDeaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country,Other:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:NewDeaths:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:NewDeaths:qk]</rows>
        <cols>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]</cols>
      </table>
      <simple-id uuid='{ADBB14DD-E513-47FA-8CAF-9CA2C8AD2E30}' />
    </worksheet>
    <worksheet name='New Deaths/1M'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mission_report_2021_05_20' name='federated.1pw637z0o2rlb51aa8k7g0oeit1v' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pw637z0o2rlb51aa8k7g0oeit1v'>
            <column caption='Country,Other1' datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[New Deaths/1M pop]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Deaths/1M pop]' derivation='Sum' name='[sum:New Deaths/1M pop:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Latitude (generated)]</column>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Longitude (generated)]' field-type='quantitative' max='28886997.467210017' min='-15640800.973350208' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Latitude (generated)]' field-type='quantitative' max='15790297.790316127' min='-10253579.864908736' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:New Deaths/1M pop:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:New Deaths/1M pop:qk]' />
              <text column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:New Deaths/1M pop:qk]' />
              <lod column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' />
              <geometry column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Latitude (generated)]</rows>
        <cols>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1671BB9A-53D7-478F-A260-A52ADFF11466}' />
    </worksheet>
    <worksheet name='NewCases/Continent(pie)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Percentage of new cases by continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mission_report_2021_05_20' name='federated.1pw637z0o2rlb51aa8k7g0oeit1v' />
          </datasources>
          <datasource-dependencies datasource='federated.1pw637z0o2rlb51aa8k7g0oeit1v'>
            <column caption='Continent1' datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[NewDeaths]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[NewDeaths]' derivation='Sum' name='[pcto:sum:NewDeaths:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[NewCases]' derivation='Sum' name='[sum:NewCases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Continent:nk]' />
              <wedge-size column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:NewCases:qk]' />
              <text column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Continent:nk]' />
              <text column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[pcto:sum:NewDeaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{33172A20-0268-4C0E-8824-5232DB2427E3}' />
    </worksheet>
    <worksheet name='Stacked'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Stacked bar chart </run>
            <run fontalignment='1' fontname='Tableau Book'>Total Recovered, Total Deaths, Active cases by continents </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mission_report_2021_05_20' name='federated.1pw637z0o2rlb51aa8k7g0oeit1v' />
          </datasources>
          <datasource-dependencies datasource='federated.1pw637z0o2rlb51aa8k7g0oeit1v'>
            <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
            <column caption='Continent1' datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[ActiveCases]' derivation='Sum' name='[sum:ActiveCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalRecovered]' derivation='Sum' name='[sum:TotalRecovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:ActiveCases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalDeaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalRecovered:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Continent:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Continent:nk]' />
              <groupfilter function='member' level='[none:Continent:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Australia/Oceania&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[:Measure Names]</column>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Multiple Values]</rows>
        <cols>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Continent:nk]</cols>
      </table>
      <simple-id uuid='{3FDEEB74-0666-417D-985A-E602D12A00A7}' />
    </worksheet>
    <worksheet name='Test rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Top 15 test rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mission_report_2021_05_20' name='federated.1pw637z0o2rlb51aa8k7g0oeit1v' />
          </datasources>
          <datasource-dependencies datasource='federated.1pw637z0o2rlb51aa8k7g0oeit1v'>
            <column caption='([Total Tests])/([Total Cases])' datatype='real' name='[Calculation_949415141092319233]' role='measure' type='quantitative' user:unnamed='Sheet 5'>
              <calculation class='tableau' formula='([TotalTests])/([TotalCases])' />
            </column>
            <column caption='Country,Other1' datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Tests' datatype='integer' name='[TotalTests]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_949415141092319233]' derivation='Sum' name='[sum:Calculation_949415141092319233:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end'>
              <groupfilter direction='DESC' expression='MAX(([TotalTests])/([TotalCases]))' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country,Other:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Calculation_949415141092319233:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Calculation_949415141092319233:qk]' scope='rows' value='Tỉ lệ test' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Calculation_949415141092319233:qk]</rows>
        <cols>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]</cols>
      </table>
      <simple-id uuid='{519A91B9-8916-4023-9EC7-DDC87EC153A8}' />
    </worksheet>
    <worksheet name='TotCases/1M and Deaths/1M'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mission_report_2021_05_20' name='federated.1pw637z0o2rlb51aa8k7g0oeit1v' />
          </datasources>
          <datasource-dependencies datasource='federated.1pw637z0o2rlb51aa8k7g0oeit1v'>
            <column caption='Country,Other1' datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Deaths/1M pop]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Tot Cases/1M pop]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths/1M pop]' derivation='Sum' name='[sum:Deaths/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tot Cases/1M pop]' derivation='Sum' name='[sum:Tot Cases/1M pop:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Deaths/1M pop:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Deaths/1M pop:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' />
              <size column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Deaths/1M pop:qk]' />
              <text column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Deaths/1M pop:qk]</rows>
        <cols>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Tot Cases/1M pop:qk]</cols>
      </table>
      <simple-id uuid='{75DBCCE5-A9B5-4454-B25D-5794C366C409}' />
    </worksheet>
    <worksheet name='TotCases/Continent'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Percentage of total cases by continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mission_report_2021_05_20' name='federated.1pw637z0o2rlb51aa8k7g0oeit1v' />
          </datasources>
          <datasource-dependencies datasource='federated.1pw637z0o2rlb51aa8k7g0oeit1v'>
            <column caption='Continent1' datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[cum:sum:TotalCases:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[pcto:sum:TotalCases:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[cum:sum:TotalCases:qk]' value='-90' />
            <format attr='text-orientation' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[pcto:sum:TotalCases:qk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Continent:nk]' />
              <wedge-size column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[cum:sum:TotalCases:qk]' />
              <text column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Continent:nk]' />
              <text column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[pcto:sum:TotalCases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{EDD689A1-3D57-42F5-9A86-8A2943E06D4C}' />
    </worksheet>
    <worksheet name='Total Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Total cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mission_report_2021_05_20' name='federated.1pw637z0o2rlb51aa8k7g0oeit1v' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pw637z0o2rlb51aa8k7g0oeit1v'>
            <column caption='Country,Other1' datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[NewDeaths]' role='measure' type='quantitative' />
            <column caption='New Recovered' datatype='integer' name='[NewRecovered]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalCases]' derivation='None' name='[none:TotalCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NewCases]' derivation='Sum' name='[sum:NewCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NewDeaths]' derivation='Sum' name='[sum:NewDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NewRecovered]' derivation='Sum' name='[sum:NewRecovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]'>
            <groupfilter function='level-members' level='[none:Country,Other:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:TotalCases:qk]' included-values='in-range'>
            <min>1</min>
            <max>33833181</max>
          </filter>
          <slices>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:TotalCases:qk]</column>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]</column>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Latitude (generated)]</column>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Longitude (generated)]' field-type='quantitative' max='31713746.492328055' min='-13713653.499021515' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Latitude (generated)]' field-type='quantitative' max='16681412.538929142' min='-9888633.3426113185' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalCases:qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' />
              <text column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' />
              <text column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalCases:qk]' />
              <lod column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' />
              <size column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalCases:qk]' />
              <lod column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalDeaths:qk]' />
              <lod column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:NewCases:qk]' />
              <lod column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:NewDeaths:qk]' />
              <lod column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:NewRecovered:qk]' />
              <lod column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Population:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='3.5059010982513428' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Latitude (generated)]</rows>
        <cols>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4B79DBE2-1679-4C28-9123-D4E35026A2EB}' />
    </worksheet>
    <worksheet name='Total Cases and Total Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mission_report_2021_05_20' name='federated.1pw637z0o2rlb51aa8k7g0oeit1v' />
          </datasources>
          <datasource-dependencies datasource='federated.1pw637z0o2rlb51aa8k7g0oeit1v'>
            <column caption='Country,Other1' datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalCases]' derivation='None' name='[none:TotalCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='None' name='[none:TotalDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:TotalCases:qk]' included-values='in-range'>
            <min>1</min>
            <max>32536470</max>
          </filter>
          <filter class='quantitative' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:TotalDeaths:qk]' included-values='in-range'>
            <min>7018</min>
            <max>582456</max>
          </filter>
          <slices>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:TotalCases:qk]</column>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:TotalDeaths:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalDeaths:qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' />
              <size column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalDeaths:qk]' />
              <text column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' />
              <text column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalDeaths:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.599045991897583' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalCases:qk]</rows>
        <cols>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalDeaths:qk]</cols>
      </table>
      <simple-id uuid='{FB5FE584-BB03-4AB6-8A52-B8674F0559D4}' />
    </worksheet>
    <worksheet name='Total Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mission_report_2021_05_20' name='federated.1pw637z0o2rlb51aa8k7g0oeit1v' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pw637z0o2rlb51aa8k7g0oeit1v'>
            <column caption='Country,Other1' datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Latitude (generated)]</column>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalDeaths:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalDeaths:qk]' />
              <lod column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' />
              <color column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalDeaths:qk]' />
              <geometry column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Latitude (generated)]</rows>
        <cols>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{324C7220-583D-4B83-8CEA-A8E750BAF7EE}' />
    </worksheet>
    <worksheet name='Total cases/Serious, Critical'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mission_report_2021_05_20' name='federated.1pw637z0o2rlb51aa8k7g0oeit1v' />
          </datasources>
          <datasource-dependencies datasource='federated.1pw637z0o2rlb51aa8k7g0oeit1v'>
            <column datatype='integer' name='[#]' role='measure' type='quantitative' />
            <column datatype='integer' name='[1 Caseevery X ppl]' role='measure' type='quantitative' />
            <column datatype='integer' name='[1 Deathevery X ppl]' role='measure' type='quantitative' />
            <column datatype='integer' name='[1 Testevery X ppl]' role='measure' type='quantitative' />
            <column datatype='real' name='[Active Cases/1M pop]' role='measure' type='quantitative' />
            <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
            <column caption='SUM([Total Cases])/SUM([Serious,Critical])' datatype='real' name='[Calculation_558164924234514434]' role='measure' type='quantitative' user:unnamed='Sheet 14'>
              <calculation class='tableau' formula='SUM([TotalCases])/SUM([Serious,Critical])' />
            </column>
            <column caption='Country,Other1' datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Deaths/1M pop]' role='measure' type='quantitative' />
            <column datatype='real' name='[New Cases/1M pop]' role='measure' type='quantitative' />
            <column datatype='real' name='[New Deaths/1M pop]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[NewDeaths]' role='measure' type='quantitative' />
            <column caption='New Recovered' datatype='integer' name='[NewRecovered]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Serious,Critical]' role='measure' type='quantitative' />
            <column caption='Tests/ 1M pop' datatype='integer' name='[Tests/_1M pop_]' role='measure' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Mission_report_2021_05_20.csv' datatype='integer' name='[__tableau_internal_object_id__].[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]' role='measure' type='quantitative' />
            <column caption='Total Tests' datatype='integer' name='[TotalTests]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Mission_report_2021_05_20.csv' datatype='table' name='[__tableau_internal_object_id__].[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[#]' derivation='Sum' name='[sum:#:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1 Caseevery X ppl]' derivation='Sum' name='[sum:1 Caseevery X ppl:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1 Deathevery X ppl]' derivation='Sum' name='[sum:1 Deathevery X ppl:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1 Testevery X ppl]' derivation='Sum' name='[sum:1 Testevery X ppl:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Active Cases/1M pop]' derivation='Sum' name='[sum:Active Cases/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ActiveCases]' derivation='Sum' name='[sum:ActiveCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths/1M pop]' derivation='Sum' name='[sum:Deaths/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New Cases/1M pop]' derivation='Sum' name='[sum:New Cases/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New Deaths/1M pop]' derivation='Sum' name='[sum:New Deaths/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NewCases]' derivation='Sum' name='[sum:NewCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NewDeaths]' derivation='Sum' name='[sum:NewDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NewRecovered]' derivation='Sum' name='[sum:NewRecovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Serious,Critical]' derivation='Sum' name='[sum:Serious,Critical:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tests/_1M pop_]' derivation='Sum' name='[sum:Tests/_1M pop_:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalRecovered]' derivation='Sum' name='[sum:TotalRecovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalTests]' derivation='Sum' name='[sum:TotalTests:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_558164924234514434]' derivation='User' name='[usr:Calculation_558164924234514434:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:\#:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:1 Caseevery X ppl:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:1 Deathevery X ppl:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:1 Testevery X ppl:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:ActiveCases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Active Cases/1M pop:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[__tableau_internal_object_id__].[cnt:Mission_report_2021_05_20.csv_DF6DE008BAAA4B4ABAC5A10A08732829:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Deaths/1M pop:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:NewCases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:New Cases/1M pop:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:NewDeaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:New Deaths/1M pop:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:NewRecovered:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Population:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Serious,Critical:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Tests/_1M pop_:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalCases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalDeaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalRecovered:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalTests:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Serious,Critical:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[:Measure Names]</column>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Serious,Critical:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' />
              <size column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[usr:Calculation_558164924234514434:qk]' />
              <text column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalCases:qk]</rows>
        <cols>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Serious,Critical:qk]</cols>
      </table>
      <simple-id uuid='{CE16D47F-B4E5-45F6-8E97-F527C2E2787B}' />
    </worksheet>
    <worksheet name='pie'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Total Recovered, Total Deaths, Active cases rate by continents </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mission_report_2021_04_20 (2)' name='federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)'>
            <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[ActiveCases]' derivation='Sum' name='[sum:ActiveCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalRecovered]' derivation='Sum' name='[sum:TotalRecovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:ActiveCases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:TotalRecovered:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:TotalDeaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:ActiveCases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:TotalCases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:TotalRecovered:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:TotalDeaths:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[none:Continent:nk]'>
            <groupfilter count='3' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([TotalCases])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Continent:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Africa&quot;' />
                    <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Asia&quot;' />
                    <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Australia/Oceania&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[:Measure Names]</column>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[none:Continent:nk]' value='center' />
            <format attr='vertical-align' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[none:Continent:nk]' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='vertical-align' data-class='subtotal' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[none:Continent:nk]' value='center' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[:Measure Names]' />
              <wedge-size column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[Multiple Values]' />
              <text column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[Multiple Values]' />
              <text column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[none:Continent:nk]</cols>
      </table>
      <simple-id uuid='{6EDCBE5A-978C-4728-A32A-C3F8C7D082B6}' />
    </worksheet>
    <worksheet name='pie_2'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mission_report_2021_04_20 (2)' name='federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)'>
            <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[ActiveCases]' derivation='Sum' name='[sum:ActiveCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalRecovered]' derivation='Sum' name='[sum:TotalRecovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:ActiveCases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:TotalRecovered:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:TotalDeaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:ActiveCases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:TotalRecovered:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[sum:TotalDeaths:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[none:Continent:nk]'>
            <groupfilter count='3' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([TotalCases])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Continent:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Continent:nk]' member='%null%' />
                    <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Europe&quot;' />
                    <groupfilter function='member' level='[none:Continent:nk]' member='&quot;North America&quot;' />
                    <groupfilter function='member' level='[none:Continent:nk]' member='&quot;South America&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[:Measure Names]</column>
            <column>[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[none:Continent:nk]' value='center' />
            <format attr='vertical-align' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[none:Continent:nk]' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='vertical-align' data-class='subtotal' field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[none:Continent:nk]' value='center' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[:Measure Names]' />
              <wedge-size column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[Multiple Values]' />
              <text column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[Multiple Values]' />
              <text column='[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[none:Continent:nk]</cols>
      </table>
      <simple-id uuid='{5D1F9839-EB68-4D22-8587-678DCF660D95}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Continent'>
      <style />
      <size maxheight='850' maxwidth='1600' minheight='850' minwidth='1600' preset-index='18' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98118' id='7' param='horz' w='99000' x='500' y='941'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98118' id='5' w='89000' x='500' y='941'>
              <zone h='98118' id='3' name='TotCases/Continent' w='44498' x='500' y='941'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98118' id='9' name='NewCases/Continent(pie)' w='44502' x='44998' y='941'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98118' id='6' is-fixed='true' param='vert' w='10000' x='89500' y='941'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='20823' id='8' name='TotCases/Continent' pane-specification-id='0' param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Continent:nk]' w='10000' x='89500' y='941'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='2823' id='10' name='NewCases/Continent(pie)' pane-specification-id='0' param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:NewCases:qk]' w='10000' x='89500' y='21764'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='208' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='84000' id='207' param='vert' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='98118' id='3' is-fixed='true' name='TotCases/Continent' w='44498' x='500' y='941'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='20823' id='8' name='TotCases/Continent' pane-specification-id='0' param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Continent:nk]' w='10000' x='89500' y='941'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98118' id='9' is-fixed='true' name='NewCases/Continent(pie)' w='44502' x='44998' y='941'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='2823' id='10' name='NewCases/Continent(pie)' pane-specification-id='0' param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:NewCases:qk]' w='10000' x='89500' y='21764'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F2B6543D-7300-4B42-B969-A4027E3C3416}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='850' maxwidth='1600' minheight='850' minwidth='1600' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98118' id='65' param='horz' w='99000' x='500' y='941'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98118' id='63' w='99000' x='500' y='941'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='49059' id='7' param='horz' w='49500' x='500' y='941'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='49059' id='5' w='49500' x='500' y='941'>
                  <zone h='49059' id='3' name='pie' w='49500' x='500' y='941'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='49059' id='9' name='pie_2' w='49500' x='500' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98118' id='62' name='Stacked' w='49500' x='50000' y='941'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='155' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='84000' id='154' param='vert' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49059' id='3' is-fixed='true' name='pie' w='49500' x='500' y='941'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98118' id='62' is-fixed='true' name='Stacked' w='49500' x='50000' y='941'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49059' id='9' is-fixed='true' name='pie_2' w='49500' x='500' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{91BCC699-8FD7-40AA-91E3-88DA8B03E66D}' />
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size maxheight='850' maxwidth='1600' minheight='850' minwidth='1600' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98118' id='8' param='horz' w='99000' x='500' y='941'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98118' id='6' w='99000' x='500' y='941'>
              <zone h='98118' id='3' name='New Case/continent(bar)' w='49500' x='500' y='941'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98118' id='5' name='NewCases/Continent(pie)' w='49500' x='50000' y='941'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='184' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='84000' id='183' param='vert' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='98118' id='3' is-fixed='true' name='New Case/continent(bar)' w='49500' x='500' y='941'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98118' id='5' is-fixed='true' name='NewCases/Continent(pie)' w='49500' x='50000' y='941'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E48EC3CD-826A-4214-818F-02707F60D486}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='New Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:NewCases:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
        <default-map-tool-selection tool='4' />
      </viewpoint>
      <simple-id uuid='{0FF2E6DC-4C37-4C2F-9D2C-137F6695AFE1}' />
    </window>
    <window class='worksheet' name='Total Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' type='filter' />
            <card param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:TotalCases:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalCases:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]</field>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:TotalCases:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A8FEE182-D424-4426-9F63-CBFF534BAC9B}' />
    </window>
    <window class='worksheet' name='Total Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalDeaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{A8377984-D8AE-42BF-B9C7-DECCCC14D489}' />
    </window>
    <window class='worksheet' name='TotCases/Continent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Continent:nk]</field>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:TotalCases:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{F3EC61AB-D5DF-4C0A-A5A8-400913A687FC}' />
    </window>
    <window class='dashboard' name='Continent'>
      <viewpoints>
        <viewpoint name='NewCases/Continent(pie)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='TotCases/Continent'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Continent:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{CA9EF202-0DF1-4584-82BB-CCA669AEA4EA}' />
    </window>
    <window class='worksheet' name='Total Cases and Total Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:TotalDeaths:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:TotalCases:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' type='color' />
            <card pane-specification-id='2' param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:TotalDeaths:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]</field>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:TotalCases:qk]</field>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:TotalDeaths:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0BBBE528-72BE-4C4A-8312-494E8B5E657D}' />
    </window>
    <window class='worksheet' name='TotCases/1M and Deaths/1M'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Deaths/1M pop:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4A04212B-CBBC-4C21-8430-7EF7E1E15FFF}' />
    </window>
    <window class='worksheet' name='Test rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C61D6B72-F5C8-4AFB-9850-65A74808A593}' />
    </window>
    <window class='worksheet' name='NewCases/Continent(pie)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{CADA3EB2-B057-4995-99D9-7BDA5456A320}' />
    </window>
    <window class='worksheet' name='New Case/continent(bar)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[:Measure Names]</field>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[attr:Continent:nk]</field>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2538EC0F-52E6-4EBE-A89C-926CCBE75043}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='New Case/continent(bar)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='NewCases/Continent(pie)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{18EB0EDA-8F1F-4A6F-B4DE-5AE1087D72FE}' />
    </window>
    <window class='worksheet' name='New Death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{79EE2484-BCB5-4892-A052-A460E93FB53E}' />
    </window>
    <window class='worksheet' name='Total cases/Serious, Critical'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' type='color' />
            <card pane-specification-id='3' param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[usr:Calculation_558164924234514434:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{99826E14-BACD-4801-AF51-F43E5E0DD0B3}' />
    </window>
    <window class='worksheet' name='Deaths/1M and Active case/1M'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:AdhocCluster:1:ok]' type='color' />
            <card pane-specification-id='0' param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:Deaths/1M pop:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AD0661A0-F231-4CBC-99BB-FC66E621E91A}' />
    </window>
    <window class='worksheet' name='New Deaths/1M'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:New Deaths/1M pop:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C942C5BB-8279-4229-9E96-806776626F87}' />
    </window>
    <window class='worksheet' name='Stacked'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[:Measure Names]</field>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Continent:nk]</field>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[sum:NewDeaths:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{07EF1DDB-DA58-4E3A-911D-6527EFCF523F}' />
    </window>
    <window class='worksheet' name='pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[:Measure Names]</field>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[none:Continent:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{40175D3E-2D57-4498-8B0C-94362FC552C8}' />
    </window>
    <window class='worksheet' name='pie_2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[:Measure Names]</field>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[none:Continent:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{5096A25B-9A30-449F-8A97-8DDB0B3047B7}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Stacked'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='pie'>
          <zoom type='entire-view' />
          <highlight field='[federated.1pw637z0o2rlb51aa8k7g0oeit1v (copy)].[:Measure Names]'>
            <bucket-selection />
          </highlight>
          <floating-toolbar-visibility value='2' />
        </viewpoint>
        <viewpoint name='pie_2'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{824399D4-AF3B-4217-8584-A4D5413D6833}' />
    </window>
    <window class='worksheet' name=' Case Fatality Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Continent:nk]</field>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0B3E0180-AC73-4DEA-86B6-D4CAE050FCB4}' />
    </window>
    <window class='worksheet' maximized='true' name=' Case Fatality Rate/Total deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[usr:Calculation_269090123305947139:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1pw637z0o2rlb51aa8k7g0oeit1v].[none:Country,Other:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{277E7DC2-EBBE-422B-A668-D4BAD63490AD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name=' Case Fatality Rate' width='192'>
      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
      wAAoisrU7MKgm4R4r8gnXGFrEgBha0MFoFU548uHX3KYO/+RTP7kgMdrG3RqBb788iH7JzJj
      JMbLUB1Rp6UKd+999HxpxASpzDTF6hpnpxVuffQhhxtbGBOyNOLrxrEbdOu4wtPdM0vqWchG
      ub9wNZMtQwUg4HZyeHiAobjpdrv0ux3q9TrxiSSH+4doikO6QQcYx27Qtf0C//HfDy2p58c/
      uMmDm1fzO5KhApCemqdcLhOORun3ehiGztzsHNF4Ane9Rjgae/uDCHGNDNcUrijE4nEAHF4v
      Xq+X8PObPM+vF2KcyCyQsDX5WZAYC/lykyc7+Ut/XAmAGAsbh0X+7dPfXfrjyiGQsDUJgLA1
      CYCwNQmAsDUJgLC14QJgmpRLpZcnytZ6Haq1BqZpUCoW6OvGKGoUYmSGmgbNH+/S0FTOynWW
      F2fZ3NhAURXOFBXTH+E4v8W92zdHVasQl26oADS7GjNzr06U7XD5mIgFOC5WaJbOCAZjsjbo
      AOPYDWppPea71DOao4vhmuHiUZ4+eUhyYoZqtY5b1dg+PmMiEaWvGzgccqLsQcaxG9TSepR3
      qWc0H1eHa4eOpvg4+qpvOxIJM/f87+z0ZZYlhDVkFkjYmgRA2JoEQNiaBEDYmgRA2JoEQNia
      BEDYmgRA2JoEQNjaUAHQ+21Wnj6l2uwAUMofs76xjab32VxfpVBpjKRIIUZlqFaIo4ND5m/e
      5GB3n8jyIoVyg2TYy9rjJ3QcHiLmeROcaZpvNC9Z2QxnmsZbm6dMCwsa9Hy8eR+LiuFd67Gu
      IJOrq2foQ6CvdlG+fLObJjPzNyjkji61uG/Pyta795U9nsOh9gDTMzOsb2wxNX+DarVOOhHh
      rNrhzv17bG9uksrOoigKiqK80b1n5dM5aPw372NRMUg9b6PwLvWMpqChAqC6vNy+c+f5JS8Q
      Jva8OXT51p2L/psQ15bMAglbkwAIW5MACFuTAAhbkwAIW5MACFuTAAhbkwAIW5MACFsbKgDN
      cp4vH37JwUkBMNndWONPXz6i0zfYWfucrcPKiMoUYjSGWxu0XP3aibL7ppPFqQjHh3s4fUG6
      fU2WRhzg2i1FeN3qGZelEYMeF7t7O5iqh3a7g95vc5Rv4w9FaJTLFHomtxaSsjTia67dUoTX
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name=' Case Fatality Rate/Total deaths' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Continent' width='192'>
      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
      nab9f2NSkHR0oTF3AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAASvUlEQVR4nO3dyXMc53nH8W/PCmAG+47BQgoiQVAUNwmiJGs3S47Lil3JIalyVVKVyh+Q
      qpRzzSGnnH1JxQe5khzjVCWS7bIjK7LkWNbCRSRAAMQAGCwDYAAMZt+n+31zgASREhEJFDAg
      8T6fCzE93W8/Q8xvekHP05bWWiOEoVyHXYAQh0kCIIwmARBGkwAIo0kAhNHuCkB6a521eAqA
      RDyO2sNAWisi4WnCkWX2dl5Jc+XKlT2sR/PZiav11RXsvRQJKPX5AhPXPiSRyzFzO/KVy+Xi
      Ua5PfvV84uFyVwDCn3zMm2+/h9Zw/aMPqbD9xrZtG631zptHOQ5ab7+Ztt+Lmj/89i08zT10
      NtVR1RrHcbAdB/2FMbTWOI69M1a1mCJX2n5j27aN+nSeO+dX6vPl16Y/5qOZNRylsFwusLaf
      3x5zOxhKOTifrnv7OQdHKZRS/OKXv8C2bZxyhsh6nragxWx44Uv13bm8UoqGthBrc+NUHDlr
      fJR47n7o4pmzQ3wwPr/9UCv+579/RUtbO3nHSya2xHd+8H3+9cf/yMt/+bfM/OFtLn/vNdxO
      lXhe8WxXCwDKLnHzk1vk83Fa+s+xHr5CS3eI9q4QlcQSGwVIbsT49ne/R2RigpOPj/GH997G
      F2yjo7uPaPgmdU3txLcyPPfko/zHrz7i7IleEmU/rZVVFop5Qs0+bl+9zrPfe5Wf/cu/cfbC
      BSLL61x+5gy/vx7GT4nBxy5x9Z03OfnYOcKzC7zy0tNEo1Gmw/PUlTYYGj0LwMbaMjdvXCee
      qfDipce5NTXL1nqU0Uvf5to7b5DOFnj21T/hRF8T4dU0jw201PJ3JA7Ql44Buo6fIbEwjq1B
      OSkikTi4PKRTCc4+0sGNqVlOjL3E4uQ42uPDY20vd+ff08qFLIlsDpdLsxJdp62tlWKxhMfr
      ZXzyNnUeC5/LYStTYDVdoS8IqQI8+cRFjvU2kym7efKJJ2j3ldgqKAaPn+DChXOU8xlCoQGG
      R07T39Oxs762rj7OnTuPz7IJT02Ax0egoYHYWoxAczvnzp2jpc5LoL2bwcFBzoyeJJUp0N4S
      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
      WNygAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Deaths/1M and Active case/1M' width='192'>
      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
      mv8fp3IiPN6RVnUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='New Case/continent(bar)' width='192'>
      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
      /JtiAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='New Cases' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='New Death' width='192'>
      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
      ynACAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='New Deaths/1M' width='192'>
      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
      5RrArBUxlYfluoTWVOFeju3m+XOfyKaSeEjLK0C0o4sVL0x6zfSnbEQIH3pdBr94hJYBSO3a
      Qw2DX9041b9mQKvDx3luqrmBneu65PN5XNdtWatO0Tpa/hxG2tpQbR0sOXV2uxXalYuXuY3r
      uk0vutRqNb768jzV+1l6dvdw7t2PWnTWohW0vAKMjI5i2GFqWNyzYiyaSaYLFqu5XNOxkUiE
      yckjDO2f4MSrZ1pwtqKVtLwC9PX10ZlMcr+cYyXURZkQo/U7ZO4us2PnzkeONU2TAxMTjI2P
      ++Y1SLF1tLwChEIhTr1xhio2uUqdUrgDF4OVi+epVtdvZSqDP5i0rQqhlOKXa9f49puvsSp5
      dhoVJuwc4fQAxktvkUj30Nvrz6YNYutoOQWCxquDY+PjpLu7uXjhOxZnpylEuhnaMciR3n7C
      8ii0QOMrwFpKKfL5PIsLC/QNDJBKpR7/IREIgQiAEP9Gy0WwEJslARCBJgEQgSYBEIEmARCB
      JgEQgSYBEIEmARCBJgEQgSYBEIEmARCBJgEQgSYBEIEmARCBJgEQgSYBEIEmARCBJgEQgSYB
      EIFmO47zVF/gOA6e5z3+QCF86E9CWpUfG7BWtQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='NewCases/Continent(pie)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAUtklEQVR4nO3d6XMcx3nH8e/Mnlgs7osASQAEL4AUCYKyREqULcVyWZYs2U58O4lTViqJ
      U+VyUnmXd0klqcrxDySVSl4k5SROnFi2DssidfIUCR4ACJDERRzEtYvdBRaLxR4z03kBUhIp
      kjiIPbjzfKpQIEGg5yFqfrvdPdM9mlJKIYRN6bkuQIhckgAIW5MACFuTAAhbkwAIW5MACFuT
      AAhbkwAIW5MACFuTAAhbkwAIW5MACFuTAAhbkwAIW5MACFuTAAhbkwAIW5MACFuTAAhbkwAI
      W5MACFuTAAhbkwAIW5MACFuTAAhbkwAIW5MACFuTAAhbkwAIW5MACFuTAAhbkwAIW5MACFuT
      AAhbkwAIW5MACFuTAAhbkwAIW5MAiLx3tfcyhoLQ1ChXh28AMBcMkd6AtiUAIq8pI0bf5W5G
      JkP8/H9eYWkuyPGTpxifmSUxP8Nbb73DxI0xjh59i0Bkac3tSwBEXhu5fJElzUV3Tx+tbQdp
      qSmieFMT8VCQC1eHePrZZzCWFjDTca5eG15z+84M1CzEhlH+er7zzae4PjSEZmi4/SVsdfpZ
      tBJU1vr54N332Vpfg8tbQm1NxZrb15RSKgN1C/FQkC6QsDUJgMhr/b0XeOP1NwjOJ1CpeV79
      xeu8d/IclpnkP/7jJ0wMX+X1X7/P5MgAocW1zwtJAERe275rD2XFHnRNA8tgIb5EbDFG74Xz
      lNVUMheJQnKBkxd76Ll0ibV26CUAIq+dOv4u9dv3UFqkszB7g+rmvVhGnIXYIoO93RRvaqa8
      rJjKyiocVgJrje3LIFjktZGBK8zOJ9i5swWcXiKTw/iqNlNbWUosFqW4uJRYbAGPQzEzn2Rr
      fc2a2pcAiJyzLAsjaWCmDJRloasEbkcCHC40ZxG4i9F0R0aOLdcBRFYopUgtJlgIzhOdjrAQ
      mGcxHCM+FyO1mMAyLZSlQCnqPd3s9h8FTQfdgeZ0k07sI73UhLOuDteWzbgaG3E1NKCXlKBp
      2rrrkgCIjFBKYaYMQqMBAv0ThEYDxGajmClj5Z81TbBuzuiYoNJxUuNjJCfnb/s+zevFtbkB
      T1sbRe37ce/ciebxrCkQ0gUSG8pMm8z032CiZ5TAwARGYu1Tkw2eLlpLfn3b1xZH9pKauX83
      SPf78R5op/iJJ/C270dzrvz6Lu8AeS4aDhCIptjetPmur2xKKRKJBEVFRTf/bjA7G6WmpvK+
      7S4sLOAvKWH9nYfba4jNRhntHGD84jCpxcQGtPrJA4CZWHnC0orFiJ84SfzESRwVFRQ//Tn8
      n/8NHDU193xXkADkNZMP3j9F24EO4tEw57uvcrBjL/GkCxUP89obr3Lk2RcZ6jvD5h0HObBn
      B8HBHt7sDfG955/gYlc3utODchSxo6GMvusztG5rJBAJ4nT7cKgU5y8P0dZSz5XhKQ4fegyX
      Y/WRUEoxNxFi8Hgv01dvYBlmRn4LSnOikgrWEFczEiH6yi9YeONXFB16nNKXXsS1deungiAB
      yGs67ft3c/ZCFyWVpTzR0cbZcyfxlLdjzY6wu3Uvu1saCM40kFgMATs4famPZHCOiZltWMXV
      RMauU1lRyXvvXMBCIxaao7ljP9cH+giMmTx26ElG+nu4MXSZ682t7GooXbEqpRSx4DxX3+5i
      qm9sefCaSZYLZbmBlccPd1KpFPHjJ4ifPoPv8GHKv/kNHLUfvyNIAPKaxcx0ELfHQ1NdBSdO
      n2dnWyvdnRfw+SuocSv6R6aora3BskBZaRp3tfPSVzZzqWuQ6i1NeFN1FHm9NLU0EV60qK+o
      pbGukvmZUmq8OidPd1JaZFBaXol7Fa/+qaUk/e92c/3D/oy94t/JMkCtYvB8X4ZB/MQJls6e
      peSF5yn96lfQi4pkECxWRynFdN84Pa+fY2l+MaPHunMQbCTrWLhUt6HHcNbWUvHyD+QdQKws
      FU9y+Y1Oxi8Ns+abbTaAtfaFXisyAgGCf/8PEoCHVWRmnM7uK7S0HSA1fQVP46O01PqJB69z
      tHOQA+3tTPRfxiqqpNZvkXBWUubRaGxuWvVQUinF/GSYzp9+wGJoIaP/n/ux0p4MNWxJAB5W
      ZVW1lPmvMxeap7HMy3A0QUutn+nxGXCAkzTBWALiM7hUGUvRPgZjSxiOIrZvrV2xfaUU4xeG
      6H71Q8x0dvr696wlUwFA7gZ9aKVSBtuam4hEQpT4/R99vW7XXp5/+ghdncfxlVbh0KB5czWL
      lpfaTXXMTlxfsW3LtLh67BIXf3465yc/gLmUuW6XvAM8pBKL8/RcHWbvvgN0XjpNTA8z5dtN
      kQ/Onevj0NMvcmPgMlZVC7X1W3jUW008NIa7Yut927VMk65XzjB2YShL/5OVKasEyEwQZRZI
      fMQ0TC787ASTPaM5rePOWaD5rv1YG3xx+RbpAgkgf07+OymtGPWAlwDuRwIgsCyLnlfP5t3J
      D6DSOsraiDuW7k4CYHNKKfrf62G0cyDXpdyVlXJCBm+1kADY3GTPCNfe6cp1GfdkWcUZbV8C
      YGPzU2EuvXIG8ngaxFrM7DSsBMCm0okUF352EiO5EXssZ87yFGjmSABsSCnFlaMXiU5Hcl3K
      iqxE5gbAIAGwpdmhaUbO9ue6jFWxUq6Mti8BsBkjZdD1yzOZX8SyQSyjKKPtSwBsRCnF0Mm+
      nN7ZuRYKJ9ZiKqPHkADYyNJ8nMETvbkuY9UUJRlffyABsAsFA+/1rGubklyx4pnvpkkAbCIW
      ijJ+KX/u8FwNZWa2/w8SANsYPnUlL+7tXwsr5c74MSQANpCILS2v533ImBlYC3wnCYANjF8c
      yvsrvnejLP/K3/SAJAAFTinFWOdgrstYF2sxgwsBbpIAFLjI+Cyx2Wiuy1gXZWZ+zCIBKHAT
      PSO5LiGvSQAKmGmYTF8Zz3UZ66LQQcvcdii3SAAKWGw2SjwSy3UZ66N0lOnN+GEkAAUsMDCZ
      6xLWTVk6VkIGweIBhK7P5LqEdVOUZmUfUglAgTLTBvOToVyXsW6Z2BD3biQABWppPk4ylqHd
      pLIgYxvi3kECUKAWAnM8zJv+qXTmB8AgAShYC4G5XJfwQMwlKyvHkQAUqMWHdfrzpkzvBnGL
      BKBALUUy+xijjNLAiss7gHgAyViWplEyQOHBMu7/UOyNIgEoUMl4MtclrJsydZSRnVNTAlCA
      lGVhPuhjRXNImU7I0iNYJQAFyDLVwz0FamZ+Icwt8oikAqQs68E2vNU0NA00/ZOfFWgs/11T
      H31GU2iatfwZC01b/gALTTMB8+Zn6xNtaWg6y581QP9kexrWRPYG8BKAAqQ7FR2fPwlW4uYJ
      qj4+WW+epGjWJ/5sorH8gZa5rod2n20+I6aHS1HoXHDzpd7sXAQDCUBB0nQXvuIZlJnfU6GK
      5RP/3YiLU2GTpGVRl3LQOJO93SskAAVI0zTQPZCnAVDAnOnmnYj75on/8YL9fUE3Dit7C/gl
      AAVKd5ZhpsO5LuNT5kwPx8IuTkVMUnc50dsnHIAEQDwg3V2JubTyQ7GzJWx4eCfi4mTYIK3u
      foJvTvupns3uHawSgAKlu6tzXcJyH99w83bEzZnI7V2du2mfdqGR3Qt4EoACpXu35OzYy338
      5a7Oak58AAc6eycz+zSYu5EAFChHjgIQvnnin46YpNcwmG1M+qkMZX8BjwSgQDmKGgEHkJ0p
      xZDh4e2Im9Ph9D37+Pez3P3J/u0bEoACpbtr0N2VWKlgxo6hgLDh5ljEzdmIQdJa39Nc3JqL
      1snc3LohAShQmu7C4WvJSABuXcA6GnLx4dzdpzPXojleTNlcbu5elQAUMFdpB+m5Dze0zdDN
      E/9MxMBYR1fnbg5Mu9BUZp8Fdi8SgCyaHuzkxHWLLaVpHj34GNMzQRrq61mKzTE6METCU4GW
      nKO2voHNDfVoKP77X/+Jz377DyhVMeZjSTTLoKa+gdmpCSpqN2Em4ywuhFHFdehLc3hLKpib
      naGyrgF3WceG1T5reHg74uLMfebx18Oje9g9kZ3VX3cjAcgmh5syR5Tp+QRdZz/EXeJjbDLE
      5PXLtNTWEddKMSMhzPkQqrSaqlSA6h2PcK2rG5amic0s0LCnnq7LA1y51kPT9l2kYjEO76li
      ejpOPLbA/lZ47+1juGqb+dbzT6N7t2AlbqyrXMXy4PZY2MXZOeOBuzp3syPmxxfN3eo1WQ+Q
      ZTv3tTN4uRu328HExDRuj4dde/bR3NxAaGaG4vJqtjdtwrAU/dcGcBcVMR8JUlJRw5baBpq3
      N+LQ3DS17KB97y62795Lub8Ih8vNQiRIYHQArWIrYKLpTtzlh9dVZ9jw8NOAn78Z1jkRTpPK
      0HOFl2d/ckdTD/PKiYfMen7Vmqate3GLpmkYiwNEe3+86p+ZNbwcDTs5EzEwM3xqeB1F/Pm7
      Pjw5XL8sXaAs0u53Q3wGfg7A4duBo2jbivcFBW91dSIb28e/n7aFUjyx3D60WwKQR652dTI+
      E2bfZ46wqcLH4NVuks5yHIkAY1Nh9rR3EJyZpb21ibmkg8qSlReOaJqGp+Y54mP/+Kl/u9XH
      fyvsojNDffz72T+ZnZ0f7kfGAHmktf0zNNaWoLncoNKUVG1lcuQarfseo6mukhtXrxILhzh+
      /iLjk1Orbtdd9Qya4/Z1trOGl/8M+PnrIY1TGezj30up7qdlIvd7l0oA8ogykgQWdepKXKA5
      GR/oZntbByiDQDTF/vZdBGYDBKZDLAVvsNpnyOmuMjw1z6GAoOHlJzN+/moIToXTGDkaArZG
      S3Av5j4A0gXKIwuRADta90I6zlQgzPXpCIv6GDWuJbY/0oGv3Ed7+378RTq9w0G8a+hBuGpf
      4id9H3AiuJC1Pv69aGjsn3TkdPbnFpkFsgmF4t/P/QtvXnkt16VQqZfxp2/ruJdyv3mXdIFs
      QkPjpb2/RbG7ONel0Drnz4uTHyQAtlJeVMHX9n0zpzVoaLRP5U/PWwJgI5qm8cXWL7OlbGvO
      aqh2VLF5PH+eXSABsBmXw8XLh/8Yh56bOfg9oSIcqdwOwj9JAmBDrXV7+FLrS1k/robG/qn8
      mP25RQJgU9848B22V+/M6jHrXHXUj+XXkyslADblcXr54ZE/we/O3k7M+wJedDN72x6uhgTA
      xjaXbeGPjvwYLQudEofmYs9E/l1ykgDY3KNbH+e7j34/4yHYrNdSNxnJ6DHWQwIgeGHPV3mu
      7cWMHuORgAfdyL+n1kgABLqm872Dv8czO76QkfZdDi+t4/kz9flJEgABgNPh5OXDP+Rz2z+/
      4W1vtWqoytMHd0sAxEecupM/fPJHPNf65Q1td1/QiyNLD71bKwmAuI2u6fzuZ36fb3f8zoZc
      LfY4fewey/19//ciARCfous6X3nk6/zoqT/D5/I9UFuNZi3lgfyb/blFAiDuStM0DjUf4S+e
      /zu2ljetu532gAfdyt3GVyuRAIj72lK+lb98/m95rvVFHNraukReZwk7R+IZqmwDOByyIkys
      jlKKnqku/u3sPzMZnVjVz7RpO/j+65N5dfPbLa7GRipe/oEEQKxNIr3Ea72v8EbfL0gY9x7c
      amh8a3o3HRfGsljdyjSfj7KvfRX/c19E93gkAGJ9ZmNB/rf7vzg5/D6G9ekrvH5XBT8+4aM0
      lB8DYM3tpviZpyn9za/hrKj4+OsSALFeSimmo5P8svf/+HDkFAnj4y0O91u7+O6bN3Le/dF8
      PoqfOkLJl1/AWVv7qV32JADigSmlCMdDvD/4Nh8MvcvsYpDv3tjFvq7R3BSkaTg3baL4mafx
      f+6zOMrL4R7bS0oAxIYyTIP+YD/lxy5gvX8cayF7e3/qZWX4Dj2O79AhPLt3oTlXXnwvARAZ
      o0yT5MAAie4ekleukBodQ8U3blpU9/txNTfhbWvD274fd0sLmr62mX0JQIEZunKJuKOCfbvu
      vHhlMT0VZFN93W1fTc4OM65qqcCgqqb85remuHipl/lwgITy8oVnP4dTv39vPjo7i7eyGvc9
      zj+lFCqRwJieITU6SnpyEmN6GnM2hBmNolIpVDoNlrX8oeug62guF5rHg6O0FGdNDc66Wlxb
      tuBqbMRZV4vm8TzQ7tkSgIKiOHXyFAqoK4WKxv1cH7lC/8VBDj5xgF+9doyvP/84xweSHN5T
      Q2fneR5r38WsrwltIoxlTDC16OSJvQ1MhuZxlm9jU3qQ3oVi4sEAjZur6B/oZ9cjj3NjoIvi
      mibi06Mk8LKtuoot+5p5/9g7tLQdob1t9c8pVqaJSqdRqTRYJkqp5ZPa4VgOgNu95lf21cqf
      HYrEAzOW5hjsH8REx91ahys6RyRqsLO1mdn5OB0d7VQVOzjw5GeZ7juG24ozHopR5LNIzEcI
      pRNMjIWY3FROy5ZaLl2fwUpFUSTZ9+gh+s+9SUlVA8nIFKZexMhIP3tadlOESXQuzvDgMCVl
      JVwfGV1TADSHA83hAO/K271vNHkHKCCppQUSyovHihM3TPqvDbN993ZGr16heW8H8xODFJdX
      U1y5iVR4nPFAlK1b6nEUFWMtppicGMDt9bGQcnPwkRZGB/tY1Epoa2ng4vkL7Nyzl56LF3ik
      4yDXevvY0tyEz+PFgcJIW3iLHXT1DbGjeRtVVeW5/nWsigRA3EaZBqbmWLHPXyjkZjgbSyUT
      GObNOzWVwkgbaA4nVjpJKm2QTqcwTQvTNCnUV0kZA9hUamGWX7/3IS5fGc89+xTh6XFef+sc
      3//tFzh39jzB6AKluoGzrBav08Vjjx/MdckZIQGwqYX5OVr3HSJ8YxCAqvpGtjWMgrOIqjIv
      xVWbiE0NMDUxiVKL4Pbx+IHWHFe98aQLZFNlVdVc7TpJTOkEpwPcGOmnu7eb/isXOXryMktL
      Sxx+8gl27d1HWZEbp6swXytlECxsTd4BhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAISt
      SQCErUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkA
      hK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAISt
      SQCErUkAhK1JAISt/T86Gz4lpAgCHgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Stacked' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Test rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TotCases/1M and Deaths/1M' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='TotCases/Continent' width='192'>
      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
      djZrFiPLrwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Cases' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOS9d6xkaXYf9rv5Vq569XLnnCfP7sxs5i53l1wuKYIiRVLiQrZFw7INA7Jh
      CzAIiBYsGw6SINgCJNsQLckymExxmbnLTcPJ05NnOqfX3S+/yjenz3/UO9/76r6ql7re657h
      D2h0d4VbN3zhnN/5nXOkTqfDNE3DbiOKIkRRhCRJEMfxjo4hyzI0TYOqqgAASZIgSRLiOIbj
      OAAATdMQhmHP9yRJgqIoiKKo51hJkmz7HCRJQjabRRzH8DyPv5bP55EkCT+u4zhgjAEADMOA
      rus7uuaPA+i6P45QNU2DYRi7cnAa6IqiQJZlMMYQhiEkSeL/F8EYg2EYiOMYURTx9+nmyrIM
      VVXBGEMURSgUCpAkCb7v889IkgRVVdcN7n4PaScPTZIkMMYQBAH/vq7rkCQJYRiCMcYnpiRJ
      /Hu7dY8fJhhjSJIESZJAUZR11/xxwK5PW9d1EccxJElCEAQAAFVVYRgGFEXpWRl1XeeTJEkS
      PpiA7mDVdR2e5yGKIuTzeQBAEARQFIUfg3aZ3QJjjK/8hEwmA9d1EUURn7wEWZaRzWZ37Xz2
      EukFi0ALnPiZB9npByEIAv5saREadE5bxa5NgCiK4HkePM9DGIZQFAW5XA6ZTAayLPOBTRdB
      q0gYhvx9WlWA7g2lgZfNZiHLMoIg4KaPOAn2EoZhwPO8vg9b0zTkcrmHdm7Dhri6M8YQxzGS
      JOE7XxiGiOMYjDH4vt+zEAwDmqZBkiQkSQLbtmFZFl9Ud4pdmwDiiu+6Ln+NBqxt24jjmF8U
      7QqZTAaqqg40T+j9MAxh2zZkWUa73R76arNVkAkmgiawYRjYC/9qNyH6bumJToNRNGfDMITv
      +wiCgPtqW/2dzZ4hmVhhGPKx5TjOA+34Wz/DbSIIAui6Dtd1+Qnruo6RkRF+saqqQtM06LoO
      TdPg+z583193QbquI4oi6LoO0zQRRRGfVMNeZbYDehhAdwdSVRWSJME0TSRJsq0B8CgijmOE
      YQjDMJAkybpBLcsyFEWBoihgjMGyLBiGgWw2C8MwtuUPbOdeiePjQXdXyfM8NmwHjW4GDQ7a
      KvP5PGRZhmma3R+XJERRhCAIEEURd5D7wTAMmKYJRVHQarW4X/GgNuCwQedfLBb3zPShe0A+
      E2NsQwdf9K02Az07xhj318R7zhiD4zjIZDLcjN1NRogx1rPjy7KMcrm84+Pt2hJFN4tserIV
      M5kMwjCEZVncCXZddyCDIEkS3yVoQNGWaxgG3wkeNiRJQi6X46vTXtKC5HC6rsvPgRYTwzB6
      fC4yaba6QtNzURSFmzthGHLTzvM8Tmjs1YQnJjCTyfSYYTs61jBPLI5j7siSrQ+s8fC00lcq
      FSiKAt/3+YWkmRWgu72RUyVeYKFQ6HGKHwXQAPE8D8VicU/oQHI8VVXlbJtlWWCM8VU6jmMU
      CgX+HVVVt2VuyLLcw/CIOwEAznBFUdRDWuwWbNuGJEkoFApot9tgjCGbzYIxBtM0t/37u7JM
      kS3c80OrqxBtv3RTicZMPxRyjPP5fF+nWFzVHgXQ+ZumuaurP7FrZJpYloUoipDJZFAsFmGa
      Zo+JMkwnfCOev98z3w1ks1m+yNJ1ku+4Ewz1SYkmCvkV4rZIg9p1XT5QJEnijBB9hi6SPk9b
      nQha/R4VeJ7X49/sBoj+kySJr/j0uqZpfHIQiDR4lCHuVlsBjS3RESZ/cCfYNR+Awv8UsCDa
      imQLSZIgk8nAcRzEcbyOOqQJNOjCdoNn/jjAMAzYts0HvCzLcF0XhmHwe06r48ch+ryTgUt+
      oTjZaQemQORWr33XJgA5S5ZlAeiuUqJDq2kan7lEo4kyBqI9RRAVF4bhIzf4+5lxwwZpoeje
      0j0lU4h2zo/DwH9QkGUQxzEfE0A35kQm0lbMv6E/MYr6is4TPShgjTt2HAeKoqBYLML3fb5q
      ua4LxhifKIQkSeD7PizLeuTsfwDI5XK7zvyQ7kbUG5EpQIHBdORZNC8etXv2IJAkCZlMBowx
      fr2kEaP4BY21jTD0CeB5HpIkQbFYhCzLyOVycByHD45sNotOp8O3Kgqf08Mhc4hA2hvSAD2K
      D3ErN3oYIPKAKGFZlrndn8lkoGka5+LF73ySQRMB6K7+ad9gs+cy9CWL5MiO4/SwPaIzmyQJ
      stkslzL3e0jkBCdJwi+MdpVH7aHuVTCOVn1SxYqSbjJ7HiViYK8hRuUNw9iSSTr0HYDse/4D
      qopyudwTfSwWiwDAbX1RA0KDXHSCd6rd3yvsZdBLlmWuPqVYiygejOOYm0J/lUC6MpLIE2hx
      GkjfDvtEZFnmgSoxOEInQKs5RYTJGSbkcrkeTlmWZe4nkE7oUZNAkI6JHNS92KHiOOZbf3oX
      9X2fiwv/qoAoaLoPop+04fd264Qcx+EyBeKv6aQoaEHCNtHZ7adTIYGZaZrI5XIol8uPnBm0
      15JnGvye53GunxxC0zQ/9irU7YIGOxEp7XabKw02wq7wdrRqi6CdwDAMhGGIRqMBVVURBAEX
      jpGDlwblC2iahiAI4HneI7UDUM4D+TV7MTmJFSNqFFgLIn6cUxQHYavXREwhUe6bYVfUoCS4
      0nW956SJqhPZHDJpFEVBJpNZ9x1gTV1K4f9HzQQipzQMQ+Tz+T1bfcl/epRNHaImd0MqIQZQ
      6bdqtRp/ndTDG2XkDXUHEOW4ZAKVSiWePUS2qnjSuq7zge37Pt8lRFDSue/7iON4x7qP3UI+
      n+fBvL3Ew/jN7cJxHPi+j0KhMPSFoZ/ZKaZkuq6LbDbL81EkSeIUMo2/oU4AUd1JTi7Z/qZp
      cgkumTQklVAUBbZtQ9f1TasnUDI6XQBVe3gUWKK99ku2us0/DIgSGJEOH/ZvAN374Hle32Qq
      GvxUZEHTNJRKJT55hmoCWZbFg2AEugm0HQ0aJGTabDSISG5sGAaXSBNF6vv+Q8sNIIkxOaaP
      moO+VyBTlTLlaHEjZm+Yv0MJ8hT88zyPl6JJWxkEmhz5fJ7TxEPdAcSZTrOTKELHcZDP53tO
      SrTpKclhIwyqsEDcuKIoXHu0lyBdEqV5/lVEEAQ9ClVio6hkzLBAg50sC7IAxN2g30Iqmufi
      gjz0p0WJIcRQ6LrOM5ZoO6TkGJGmojzSB4Gu6zAMY899BEro2W4i+CcFQRDwAUmLFBU72C76
      0eDkQ1LugygDJ20U0JuvIJpC/WICu+IDiCu567pQVZVPAAA9WWJpeJ43lNWCdpy9hO/7vDKc
      67rcFPqkgwYmmR4UBB1mTITyPur1es/kEPOggfXJOqSTSoMWYx5oHdqZYq1kCeX60g8RBdYv
      YZpu1k7S2fphNyvdDQLZvB+HBJRhQyxWNYwaSGkZQxRFaDabPQM+rXAl00YkBAqFwroAK1Xq
      EAOpQ98BCKIWpVAocO6fEmNINEeJHTvdMvudQzabHUrVsO2AJLgPqwbodio9DBPkw2Wz2aE7
      ulR/NV0viK5TjAcRxUnmKJlL4udM00ShUOgZF0OPA4gnSLOVAkUAeswDem037Oa9DJbRyvNJ
      qQC3VVD1CTJ1hzkByWLoJ4vp5yMA4M6wmCkm7g7FYpEvVPTMhjryKGPLNE3EcYxOp8MvhPQp
      NLOJwtythA2SWewmRIefWIWHhb1e/Snbjxi4Yf2+OB4GxXfS9j/B87x1z4AW4FKpBMdxesxU
      xthwJwAxIaZpcr0O/aGopW3bCIKAc8PEG8uyzCdGmi7dLsQsod0AHTufz8NxnA0Len1SIRIe
      W732zaTJSZL0JEuJDE/6GIOOn3Z8dV3nNn8URbx6HZElQ/cBqEYLOR2kyaBitkQVqqrKRWT0
      GZJCUIbTg5zHbk0Air4qisKVmA86YT9uIKkLJTZt9V57nsf7O6QDnzReKCV2GCBK1nEcTtMC
      4Cm4SZIMlwWiG0Og7UasEkevUyIzmUQ0eQqFwlB8AnKKhg3aUino5TjOI5egv9ugnZ52ga2A
      BJJiais5t0R1DjuXggonU7EwEbyC39B+DWu1PkmuEEURXyEoAgesRUzFMoJU+9P3fdi2/UBV
      3+gm7pZpIuaebmcQfNJACUBbAUkV6NkSI0gxI3pOw6Swt6IR25VIMDm4omwhzd/SjKcVlXwG
      sZLEVktbbHQuwHArSFOkmcy5T0rzi63C931e+GA7JenFXGVRvkC7wcrKCnRdR6VSQRAEe1bu
      fugSPZI0ULWHfiBbnwYmmU4knSX7kCbITpSeJL+mHINhgbLTKP/2UapPuhegWq1kum71O7Ta
      k2naarUQRRFs20a73QbQDao1Go09DSYOdQegaC45M3Ec8yR5SepWTxalqfRZGujiikBaIvps
      LpfbljkjJudTJtlmiGIGVdn4N0hmQTVpaKJv1Qzay4DVbvyWKDqklXojJzhJEjQajXXaHPL7
      xJImQHe33ssJMNQdgJwYUeUp2sqi5y+mNRLdJZpJVN2AJlHahNrKudDn05UqBuHmfGvTz1Be
      A/2bzvVRgcjA0eQkB3QY7Aqt4FR2nWjLQaCxIP7f8zzkcjn4vo9ms9m38cZeYVe8N/IDaBBT
      lFDXdTiOA1VVe5SgYqiabEVauciRIcHVVilH2k2oVN5WYgNnD1U3PS4l5NAAYIxtywnei9Vf
      zICiSUC9GYYRtKLdnChvetb97i/VL0qXvknL4gligeW9SHLatakmVnsmKIqCQqHA6c58Po9s
      NotcLse7x/TrrEK7hWEY6HQ6W17JqAo1AHzwzuv40Y9exEpr86SZa+9dwiC3+cbNW4jjBK1W
      C61Wa8N+ZnsFxtaa0hG9TFTl/Pw87t+/z9tR0ecfFOSjkVzBdd2+Zqbow4lZfIOSl2jH2KsM
      v6FrgVzXha7rKJVK/KGQnc8lqKuz2/M8Xv9fRDab7UlsIXtxu/YhdZDRdaDdAcbLGQTBCn7r
      X7+JU+f24Z0PP8Kp46dw9dZ1HDpxBs7sAqRcERMZE82lu/jjP/4OPv38p/DOB3OYnKrCjJq4
      PNfC0SNHAKxlgj3MIBjZ00QzU4CKMYZGo8Hp5bm5OcRxjP379/ekp271N9LPMA0qgdlqtXoq
      VQPgtZ9ECcNm0WDRLySklaLDwFCXLjJ5qHw3xQJarRZ/QHTixKK0222+XdN7VOpDXD3SN3Az
      kINVLpehaVm4XgOlSh7z9+o4ef5pSJ6FwyfPIZM4KE8dx4GpKvYfPY0DExUwADO37+PQwWks
      Ly/j1GPPoJJVEEsmDkyNAuhOru065sMGrZTEoN2+fRvz8/P8daqWlslk0G63US6X4TgOLMtC
      s9ns6cuwERhjWF5e7mHtxGdA/6Ym57Zto16vw7ZtAFhXrU2SuoUPyALoJ27bbAcYVtBsqDsA
      SRooa4dMA6LBbNvu0WnTLA+CgK9I9IfYBlrR6LPbkU2T450kDJ/7zAu4PjOHC4+dRRQwmMY0
      rl+7gYPHnkZ55gbK1SnsG1cAJGBxAkVJcG+hjunxEUhqFkiyCJw2VuyYl9p42IOftPhUMoau
      udFo9DQR9DwPIyMjPSmBxLQ5joNSqbROOy9mUUmShFKpxLU/JGkQd3Kgl3gAgE6nA9d1Ua1W
      kc1m+YSwbRvlchnNZpP7E4NSWcWFUfQZxYrjD4KhJsUTn69pGjRN47sBpUYGQYByucxFcBQM
      K5VKPRdDsQBVVdfVEdJ1fculyMk2dl13qHY6ZT49LNAKSUrU2dlZrk+i8H+lUuGDhwJ3+Xwe
      QK+eHujuxjQJ6DXLsmDbNkZGRrjv4Ps+Op0OAPD6pGJB2n7iNWDNBKJVXVEUVCoV1Go1AN1a
      sa1WfwaO4i671RNiqCYQFUCi6ly2bfOHIsoSiJWgf6cvzHEcHm0UzQzi3UXfYivntNlKYbeb
      mF1YAmNA4Fpw/Ee/wjLFSBYWFrgpoes61+aLJiMxVuSkivcT6D6Der3eo5mhHA6abJZlodFo
      IAxDhGGIdrvdE90Vfy8NEp4RSBBH7BwthIOuc1B64zAw1Ang+z6/McQSiKsN8f80eGlVSOcK
      67rOI8rkZIrKQdd10el0Bq44BLq5m5UMb3dauHv1fcwstvDWy3+Kix/OP+Cd2F2QCUCmjGFo
      UOQ1x5IGu2g6iKUFxZiLeP9s2+5puJHP5zl1vR32bbNzLxQKcF2XD+qNytlQzvFuYehqUKoK
      LQqcgN429+TlU39Z2poJuVyO1/4hHj+bzfIHSFs7mVGDHDlytjbj6bOGhsVaG/cvvYbbyxZu
      zdx5sBuxy2CModPpoFarIZ8BtKV/CX3xH8OMbwLomic0OegZkEkJDK7AIU4I0zTRbrdh2zaX
      KIsLzqBJNAjERpVKJQC9BRI2c3q3S4lSu6qtyLR3JRAmbrH9zA+iPuM43lBPHgQBLMvikVzq
      fiLLMg+MbUWQtpn9Pz83h1w+h6OPv4DP5l28e2trNzztLIomRRiGQ0v0T/8mKW7DMIShXIXk
      z3TfbH0PyugJ3npW3BHIDqdMuVKpxMtNkjqTytpTJl8URbwXb5rCTA968Vn3u+YwDHl3x0aj
      sSWTZrtSDkmWcb3VwAdL87DDANVMFk9P7sOEme07SZMkGX5lOOoMA/Q2t6BADKUPEouw0Swl
      k4roVMYYL2tHKZdk+/a7UWQCDbtiHDnBxIhQn15xUjLGUC6Xh56TwBhDu93G0tIScrkcTGkJ
      yuK/hMRCsNKPwct9mZ8LfR7o+kKO43DnXVVVjI6O8sEsSd12tWTqkFNLx9holU9PiPROvZNr
      FAe/uMhsdA4fNVbwxty9ntcVScLXjp7CuLE+fsTYkFMixQOnT14UxtH2SmxOOsBBPXdJdiDe
      UNu2ebSYdpJBN4a0+jQRBk02SZJ4Cb+tQPw94r47nU43QVy4nna7jWq1OtRdQGSAJElCIE1C
      n/wvICUWAnk/crkccrkc76ROEyEIAq6p6uefAb0+wGbxgUH0pPj/vUQsAe8uzq1/nTG8vTCL
      bxw92XNNNMmGPgH6bY0E27Z5IgwpCbPZbI+p4LouX7Fpl6CS6VQig1IRtyJwo+2fJuEg7LSm
      DV1LFEVQJAl6o4GgWuUTfpigxUGUHDDG4KMMhhKQMB5PSTv/xMTRJCAigqhMcnhF02QzgkFE
      evCLO8t2r3FQxDgdfBPfc8IIwYDnW/ecgcfZlbIoVClA5G6JViMZMbBWwpoGuei00sruui7n
      iGnVou9sxXRjbE2sNog12m5UkQI6BNHejsbGIGNtQKRTRHea4EN8vm3bfdMwGWP8OshJFicA
      FSoA1lgky7KQz+cRxzGWl5cfSGowyCdI7w6DMGj32Cj6L75mKCoUSUbM1vtvec3gzz7tr+2K
      iouoTbL9KXGcgi3UO4ykCuTQAd3BJPbaymQyXChH5VUAbCt5mvIBBrEJ201pbC4uomm7XGYM
      ALKcYHmhzm8wRUXpMwuLizs2DcjsIZEbAJTLZf4eDX7yj6g9kPh9xtYnsJBkgXKzhy1AS08A
      ui/96PHtTJZ+0ACcGBnt+96F8UmuTEgzV0M3gehC6OED4LnBBJI50GoollNPh7jJjhfLplCl
      ua2eD/3mID6ZAkVbRePefcST03j7ygc4cvwEbt26hUPHj2H+2gqatbtYcWSMFmTMLy7j7GNP
      4qN334WnGDiwf/+Wf4NA/gtFxF3XXReFVlUVlUqFV9ogE5JJErwkRkbqPngq4yLKOGjwDxtp
      H6Ffi6P0jvMgEzBJEnxqYhoAcKOxgjhJoCsqnpycxpF8kfejANCTxTf0CZDWdRiGwZtmi6Bo
      ZbvdRqlU6nk/fbOoqQHpiXK53LYoRkmSuLgu/Z2dFrRamp/BwdPPwrr1NjpRgnanCbAYtXoL
      t2cWIZ8/i2efPoOL330Np77xE1i48j6AtQG9FU0TMUpk9/c7f6IvaRcTA1ZOHGHJsXG0UOIm
      KO0MYmma3UD6XEUyg85bnHjphW/QpKRdZBA+M30An5o+AD+OkFU1SKumj6qqXKkgfn/oE0Ac
      /JIk9R38BNq2aXUnO9dxHB4mJ9Ul2fxpR22roJ0jLbraybEK4+PI5XO4/N5bOHLsOMxL11Au
      VlFSY6wsedh36BCmJ8ah6TmceeFpfPjKj1Cd6q7+YRhi7tYPcODEVzadeOTIRlGERJIgYz1F
      SH4TDSiKrwBATlZwtFDi0oNGo9ETdCQ9z24hzQamo9F0zqJ9Ttc0aEcQzeBBMADkMdg/FGtO
      DTUO0Ol0esyMTCazTgo7CDTjgyDg8mmyDYvF4jqHdyf2YpJ027USJRrHMW9qt53jDBJubYZM
      JsMDeps53owxXiQgZAn+9MYVfO3wCYSrgat+fD6dm/gMJKlbb2llZQXVajfjjarxVSoV2La9
      q+Xk07Y+/VskQijukI439NsFyKck/OAHfw4wFSNTR3DqyBQACYhDNJ0A5ayOphMgCX2MjY9i
      cWEZk9PTUOW1+z50ObSI7ZophPTgdhxnnZpxJ44SybXJXKDCrsOO1m4EijlsB3LC8LXDJ4DV
      wSLeZ1opxQGUtr+Xl5ehKAqPdTDGeDWG3cq8EhkpoNc37PfZNP0pfmcjRFEMWVZhGBreeed1
      JNDArBakyn4krXtA8QCiyEZWjfC9P/k2jn3mZ/DZcwf594deHJdAdvd2IQ5IMYiWhsh+bAck
      1ab+Ujsd/Cz28dJfvozK9FGcP3kYdz66iCsLFp5++mm8+hd/jMPnnoVfvws71PDc5z4Lc5tu
      Bjn/XC0rpBWKgyKOYzQaDV7/knKmKcZCgUBS2IoVMnZLYSnGAMT7O8jOpx2A/t1vsgyaDFq+
      giMjeTS8EEuzd9GMMvji02fxozc/xPNPnsVrb17CxImDmL03gwOHDsNO+Ty7Hgne6ffT/6Y6
      P+LqTXV/dgJaoXZ6ns25GSzWHMT6CtiJw0igQWUhbLsOVSuh0+kgp2jw2xb8KIGpbJ9xliSp
      pyWQaZpoNBoYGRkB0DtYxJ2FyoDTHypInCQJVlZWBv7WsNgg8ZmR8ytWBOkXORYnRz9/YNC5
      ffH55wEAhwA8cfYof/1bJ84BAE6cucBfO9fn+7uiBhVvwHZuKmOsbx1HcTWkm0F034OUJHmQ
      SZotV1CsFJEELlzXQaZUxv6JKhbnV3D49DF02nWUxsZRzcSoO4N3sI1MEFEHT46s6BPRgKI4
      CR2Xuqrgxp8iqM3w0iX9ngXFWnaLCqVz2szUEge56B/txnmJUH7t137t14dV25Kq7gJrkUui
      27YDUieKoNS7OI55BQLGGJdJ7KUd7/s+VCOH0VIO+w4cxvzcLKanpxAyDadPnQBCH8dOnkYh
      a8IoT+PAaNd3oawtyoMg1eWg+0PBK0VRUC6X17FgcRyjUCj0tGcVG8dZkQpkKtCNDE8M6kej
      UuBR7J2V/gzRj+LKvBXzs9/vbYXuHPS6LMuQEx/X7yyiOlKCb7fw5jsfoFrJ49VXX8X9pSYO
      TE/ixvUrKFfGICHBlQ/ehi9lIAcdfHBtBhOjJbz1xuvQ8yPDZYHa7fa6wrGZTIZrwLcC2gXS
      enHxbzF6KMsyT7PcK4g1jbYDcaBRl0xN0zZtEC4yJkEQ8Fxaxthq0r/GTSDKA3AdB/W5Odir
      jBOlnab9tPTf6dU6zd6kS5zQeaWRPjZdx4Ou6Kqq4MN33kIrUPDlLzyP1195EefOnca7V+bw
      2WfP4dU33sWpg1X8yYuv4a//9V9G0LiNmysaGvevwzBUHJouY+b2AgqnnsTyjcvDNYGIiSDQ
      LlCr1dBoNLY0cPqxJP3oMdGE2OuukJTcsd0/dF30NwX2NkMcx2g16ojjmB9HXAzIzmasqwFq
      tVoIb92G8ad/3kOR9jMt+63G/SK26YT39Pvpzw7abdLvi9KIQZSpCKc2i6szC7h89SqiOMGR
      A/vx1nsfwfN93L1+CQdOnMKrr12E21zG3FIDucoUnKXrWKy1oOrdoKyf6Fi6/REy+fxwd4B6
      vb7pYCwUCn3LidB2r6oqF8Bt5gDRgyoWi7uSfLJboIWh0+lA13UUi8WB584Yw+2P3sXLv/1/
      4iv/4X+FiYNHsLKyws0/MYoexzFu3rzZpXsVhiCWkMnlUKvV1mWBDSIA0sEregaiM5v+fJrN
      EZ9bP+4/7XBv9O/0OSqKAtMwcOPmbUShj9FKDu9fuoFnnv88lmdncPTYMUgScPfOVZh6BpFW
      wL2r76E4dQx51sG1ezU8ce4o3vvoOsamD+3NBBBvBik/KQCVviGMMdRqtZ5k9o1WHvpMqVTa
      VrGnhwW6FtL3hGHIq+MB61c8xhha9RVce/Mvcfq5L0FWNbTbbYyMjKy73jiOu2XG65egvPgP
      4X/ln+BuM8Ho6Cgv5y5W3kubNiJ1KfL4tCtLktRT3CAdxU3TmeKxqTXRRslL9Lc48MVKEnQ8
      Gq+U4zAIYRBA1XRI0mCWa087O4gmC6XtiX1bgyBAu93uKcBEN4I+K04w8QFRsIx6FT+KE4Ex
      hnq9zlMSu0k/Pq58+AEA4PipU5iYnOoxASVJgpHNY/z0UzAy2XU51Iz11vmxbRuhUkbx+Nfg
      JAZGRjK8mC0VEujnL5Fz3o+KBNbyCdLmDn02HZORJInnGkRRxItyUVulQUgverTr0OQiWpeQ
      znmgc6AxFKy+X6lUeiL4dM671id4s9eJrhNnJd0ssbgWvU9sEk0AKr9nWRafVMSAbGRSPCwQ
      dRv6DjodGxkzg49eewff+eGfIFwNTCl/ouCr3/gpvPD5L/CVT1VVGIaBSqXCHyoFtLqycxuq
      9RLQeQ2AjHL+ecwFh2Hv/1kEXoCJsRyiugdlpCtJbzQafNWke9SPdkxPhHTR4vRqSn7J0tIS
      35moQR0hn89jcXER9XodIyMjiOMYzWYTBw+uRWbTaZjiTkA70SCzmMzotF4s3clG/P5QJwBl
      dzWbzXXvDRqQFKwRO8uIjjCfyatZV6Tqoy1dXClokMVxjEqlMtRiWMNAFAYYvfcHqBQOoBNX
      8YOXv8sHP9C9F9/5kz+GOjqKb9+6AScM8dNnzuFWvYZXZu5AkoDPHj6Cnzx+Crfty+EAACAA
      SURBVHang0KhACN4D1L9j/gxlMYfYKr6S2gEBzE+Po5g3kbr8hJKZ8ahTna1SM1mkw/MfqmR
      6ZVdNI0Iaf+MVmrHcTAxMdH3+iVJwsTEBPfxRkdHMT09jWazyZlCOk56JSf0c+TF98h8o92C
      in6RSjZ9jUOdAGIlhH7UpWgriifs+z4XilHKY3oLph1j0ApEkgFarfrpzx82FFWDP/oEmDmC
      2bv34PRhgKIowj/74ffR1rv+0T996UcQr/T/+/ADhFGML012te+S82HP9yUwqP5lZLKnwBiD
      NppB/sgI9NEMEoC3qKWVsp9JI77Wr1m1+HmRHfI8D5VKpSeq2+95UZl2gmmacByH+0F0TJp0
      YmA1jfTkJIKBTCYq2ktdidLnNPTKcK7r9pThTjs36X8Da8nY6UkjrkCD/gDo4abTk+xRQhiG
      SMYfgzF+HIo6WBwUsRhH2suoeBb6XcUPbt+ESUktch97Ws6i3W6j3W6jYTXhVRK4sc8Db4yx
      vrs0sJ7SFP9PVTrSOy/t1s1mc13/hn7NT9LQdR2+768rgCyOibRzLu5c1GiDpO7k59DgFyXf
      4jlIkjTcHUDTtK4GZrUVUnpmDkIYhmg0Gj0zvx/EAU7HFI9LtOCj2LdLkqQe3+Tg4SMolcto
      pQaiYRj4prOMuLGIGBK+v+8MWkZqkIcJvKtNuJ0A2dHzKBUuQWKrZVCUAqLcC1CTtdItURR1
      fackgd9uwu+0UKhUYVnWlmqcUnyBMcbFdPV6Hfl8vqe4QaVSQb1ex9jY2Lrvb4ZcLoeFhQWu
      VqWsQdFPAcAnHxVOA7oToFKpIJPJYGZmBtVqlTNPgyhWHnsYdl0gUhr2o0NFvnqjm9KPOybQ
      QyCVI00asWBtq9VCuVx+5EwgEUmS4PrVq/j93/kttBoNAEAun8fXv/nTuPH934Xd6IrWPjx0
      HleU3gSQbxj78QVjErRMVB/PIpO7BQYJceY8LLdr/4plXpIowuV3LyImbZGu4+Cps6ty4m5H
      z7R6lyYP5WdQPgGwJnuhJuiO4/Df3GlUXtwtyE8RNU5UUTCbzaLVavFJQkV8FUXhuwHtTMQ6
      pYOr1KloqBOg2WzyrYz4bdGJ0XWdJ3dvtiqkWQiRDqX8V1rZqGwiY4xvefl8nlOnjxojREiS
      BG98cBOS14SiJLgT3cKV5iU492Yxfj/CvuIJHPz0T+D/XbiJm/UaJAAnR8fwreIJqMtrC8zI
      uQrKxh04+WNY7nTZGho8dO2t2gpuX73U8/vHzz2GfKnMK/CRwyieX7PZ5APtQeQmzG6BRSGU
      8tiWzVNSD9A4Eq+J5CRUWl8cw+LxqRKdoijQdZ2zWcVisZsPsuMr6ge/hcjxEEo6GAOWl5f5
      ykwaGNo2qapD2ibr5/zQRVEgherfl8vlnlWOU42rJpVhGDzG8CiCMYYLx6eRsEn8i9f+Gd6Z
      u9h9wwDuHAMmC/N46lAZf+/Ac7DBIEHCaCaDxIlwt3kZSqygUKigYC4hM/sSMBEA8vEex5T0
      RkZaNi5J0Fczq3Rd5/VExXMDugPoQRdIRVHQuH0JSRRi5InPgWHj50GrdS6X44tc2qyi5KZ+
      6ZHp+EWlUgEAHn+h96MoGu4EKM/8Ecr2IphiICochFc5h7Y2jlarxU+WIoL5fJ7XmhdPPB2V
      BMBNHEqilySJF9AVL5YeICU+00rxKJtCYRji4uzra4NfwEJnDt++9m3sL34WT05No6BqiKII
      ltNAS2tC0iVUTx+Es2Sh87v3ID8+hezXLqDeaHQdvFUJ+Vv+X6KsVbHvyDEs3r8LQML0ocMw
      zAw3c2zb5gE2cWHSdZ3TlDtdSOI4RvH4BbA4ApNkYAs7ACXsj42NcXm3OOC3SnSIlHo6d2To
      E4D/aOxDa16H2rwOs3AIhYM/juzINJdHJ0nCtT4i+tn7dBGMMczPz3MTyPd9bvMTY0A7hHvn
      DqTxcairAZEH6Ta/m6CmgVeWPxz4mdfvvYW/8Ew08tN4JjuGhDEYYyYkWYaum8iYWSRvf4Cw
      5gOvXoTy5a9i3/QUnLtXETkWCodOIo8iDJiojE1gcv9BTicyxriJOD093bfJHa3CzWYT4+Pj
      PV1itgUzDwnrHVFgLchFE48sB87Vr6oFWq3WluTvW50cpVJpd6UQEgCtMwPl2m/BOvLT6CDf
      U91heXkZIyMjW1IaBkGA6elpXt6PQu0E6ofFGENULkPBWhBlGJUPyPHea8iShDO2hrF7bdzH
      6o4pATOT91BNRuG8Y+GJLz0DZWEe6unTkAoFRK0VuEuzAIDO7Ss4fuQCrI4FfbIbmbUsC57n
      oVqt8p21seqIp0EraLlc5jY4xWpEbNQhph/y+TwvGkbRXVIGmKbJHVdxN0o7sv0GuixJ8FwH
      url5puDQ4wCDIIcd5O/8IUw54o5WNpvl25uUhHj7rYtwwoTn7HZabT7oVFXlVaCt+gJef+s9
      RFGI5Xqjpwk0tQjFahQwDEN4Vh03ZuYQ+C4uX7qGhYU5+H7AHaj0n8XlZa5VEv/sZvL4uYnH
      Br7/mX3P4HPtDBTRbmbAvoVpjGcnIJsqnMkJqH/3V2Gc1rsLjrH28BUzyxtR0wAm0oCuKV0q
      RiQdJEnCyMgIxsfHuR5IjCe02210Oh3ecK9fYK0faBJFUcQlMJ1OB/V6nS80YqyBzFpqCEiq
      AfGPJElgAMxsb5Fj8TzoNzudDtrt9nAzwjD7JhD217dLsQ81diFPnIcsy9yRNU0T77/6IkaP
      P4aMAlx653V0Ig1SFKFZm8P7719C2JrF7/7gbZw9fRLXLl/BExeO4s03r6M8UsCtqx+g5Uno
      1Oew1LQxf+cafKbgo/feRa4yBrlxE3/+7iIOlRJ854fv49D+MagI8eobb4ApOjw3QKu1gk5t
      EZduzWJ+cQ5jpRxee+0NZIsVXHrvTSy3fByYntxRAa3NIEkSpor7cLdxBwud3urGU4Vp/Nz+
      X0D9g4V135Mh4+QXH4N9bgQvzt3BU41XoL76v0C69RfAY78IvToFPV+BVJmCmclg//79fGDR
      YBGbFVJLqnTwS9M0nnJJ/QJowaGqGpVKBYZhcCqUzKqNdoN+Cfm2baNarfYoSsUdwDAMZDIZ
      7pfQNaQDZESB0t/i+xQboF5ze7qna42riL0amDbJ7c8oinDh05/BW2++huXsKDptF7fm38W+
      SgVmQcGTx8q4ZZl44qmDyGgyvE4Nr7zh49jh/bhz50Nc/XAR+47FUGIfn3n+03ht7h7iOx+g
      YSW4O7uEUwVgJK/hvRsLOLR/DPdmZrCk6njqsdN459odZNQSQn8Rc3fvwTAqUMaruH7lMp78
      1LN4//WLyFSriAdM6u2CwvRJkgAsRn3hbfj2Iopj5/Ctx/8OTo+ew3sLbyOMQ5wcPY0vHP4y
      YA0eRJlyDmcqGUznCsCde112Rc/B80OYTgBJzyJeXbXTRIDoEBqGgZGREdy6dasnJkCDnMxO
      GlTi4CXSgnokWJbFY0CMsYHZgJ7n8cEr2vqk90qDJieZy+VyGe12uycPJL3jpONJFEQTmcM9
      nQASGOTljyAVp/gW3Gq1kHgduCHDdCGD5rKC8fEyquUy9JwKPadixCjg0vvvwTs6jenDJ3Hk
      5GkkTgOxosM74KM6MYWcIUFVVBw+fBgFNcbyR7cwMVqBIgPnzxQwc+suJstZSGqCvKHg9dff
      hDJyEK3lO5BzRZw4dgydQEdxrIh9BRNvvPwKjpw4A0WVEIfrncPtggZTe7kJJge4efHX0Vrs
      Mj+SrOHA+V/Fs4e+iS9Vj8LSJjA+Pg5JkhCNRJg4ux+Ll+73HG/kyDhGD0xA1VSgM4vmvWkU
      vv7PoeTHIPkxKq+9jHikivpzL/DqfIwxJHGMoDWPpDULKT8BvbIPito1NY8fP456vY63597E
      vc4dfHHqq8hlcz1Sk2KxiEajgU6nwwcq7eaFQgH5fL5rW0sSXM+Dbdu8Fik115MkCbqmIYkD
      QOo29aNq1v0i02JEWHSWSd0q5i7IssxL3ZOzLsosRHUqgOEGwvDGPwfsxQ0/EuX3o3P857lU
      IgzDh9JwOglsLLR8TI+NbOnztPXu+PeSBHPvzaB1ZQmx1MJc+9fAsOZISrKGx378X0HP7UMu
      l+MrNGMMru3iyvfexdKVWbCEYfT4JA5+5iRyxTyXDjiOg06zhtyL/y38z/4DFGYW4OVyuKtq
      GB8fx8TEBELPgffi/wpc+X1ISQgmKcDhL0L/8j+Ake+2VV1ZWcGLM9/Hzfo1/MKpX8HC/AKO
      Hj3KK1Ew1k1YkiQJCwtd02x0tFuVeWVlBaOjo1AUBXeuXsL+oydQXy3j4rou7t+/j4mJiS77
      IrlQW3+GoPxznN42DGNdrgCt+lsFdcKhXc80TR6A7Yc9pzXkoI0kjvhFPSyKUtZzmB7bWkeY
      YSBJEvj1rl5HTgpQpCIitjYBWBLCbV/H5IEL6xJLjIyB4186j3NffxoAeJ8v0udks1k0fYYr
      LeDIia8gr2cRPfkUpDjG2GojbNd1Eb36v0O69Dtrx2YxcPt7CL4vI/jSr4OxrnP6+UM/hqWX
      5nA9voyTx06g8W++B+nrz0I7c4QHluI45u1qidouFouo1WoYGRnBkdPnuBpgeXkZSZLwIOjc
      3BympqbQUr6KoFaDpmk8YCkygjtZFFVV7ak2vpnsZu95PZYAYDwWMkzV5vzd67hy4w6OnzmP
      Dy6+iwOnzuDCycNDO/6DQFEUjJydRF1aQLv1IiJred1nMvlJblOnJ0EURT0Plmxfso2reR3l
      +rdx7fL/hRN6FmPjP8/Ngk6nAzkJoV//4/4nd/v7iJ75zxFpBf6dM+cvIFcsIGYMSjkP2eit
      oic2RAfA6W0SRFLgjJKb5ufnEUXdhe/QoUOo1+sol8s9Oh265u2s+GQODfID6DODsOcTgKkZ
      JElv5s+wMLH/KKx2HXa9iUBiiDfpD7yXkCQJ+dEiogsJ5MaTWHmlgCho8/fLU8+hOvVU3wco
      SdI625gYEOqnZuo6jpz4KjTmoDL1aV4v1DCMrhY+tIGwf38EicWQvBqYmucTYOrAAURRhFq7
      icoXz0CfGOnRY+m6zpWgRFFS/dFKpYJGo9GVYKyyQydOnOA6fRVr1THEQb+TFV+UTYtsDy0O
      G9HXQ5dDbwVxphvNJAyTX79x6T0Y1eOYKKiYPHAQF199HTh3YmjHf1BQFNVPyjj7xf8Nizf/
      PQJ3CYXRx3D43C9BN9YKXImQpN46q7xF6mp5FvpMZfwk1Mzf7TEjOKduFAGzAljrm4AzxQDL
      Ta6Trk9NTfHoMJkS9JkkSVCr1fhvEa1IKBQKcByHa7IofqDrOjJGAWNjY2i1Wjw3eqc+oEiT
      MsbWlWMcBJoke5sUDyAoHds0QWKnMA0TN6+8D+PCU1ia+QiPP/fpoR5/GCiVSt26/LaFo0//
      l3w1JQebKEUybcIw5II2cuhoQIkrKLAmEBO5eLKJHcdB8vi3oLz8PwOpNBt2/hfRdCIkSTeo
      RW1piWYE1rqq0CAnCTLB9300Gg0uh6agJO1AjuNgdHQUKysruNeeRZIkvP1VOs+jn0QmnRhD
      ECve0W9ttvKL2NMJkBgjcLMHgaRXASqmOgJr9uR2cezs4zh2tvvvA1P9+0XtFMMQ1NFD0nUd
      tdk7KBw8BmPVlo/juIdDFxEnCb5z+zoem5zG2X0HwBhDY+Ei1H3PIJPtNY1EpooGFf1m/MQv
      wFdUsHf/LeCuAEYJ7PRfQ3zmF1BCN4oqSRJKpRKSJEG9Xu+p4uB5HnzPQmP2+3Bbd5AfPY/y
      1GcQx4y3mSKdPpVgkWW5p4qFqqoYGxvjMYCFhQWu1kzX/hevQ1Snis/CsixEUYRqwcBSq4Uw
      DFEqlXp2TNFPSE+uPZsATJLhTH8eUZysOwmxtAXZu5lM5pGVMQ8DhbFpeL6PjmXBdV2YprmO
      /eDcPWMQlRCyLGP6yOf6Rqbpu2SyiLuEoihIzvwMGi/Ow/gbP4u3mwZiScOnAkDWJQRJDMNL
      0PyLlyFnDWSeOwH0OOMMt9/8R6jPvtR94frvYPrUL2Lfuf+Yr7qkCSqXy2CQIUm9pdyBbuCt
      0WigUCigWq3y3s/pbEDRTxRXdDE3WFVV5PM5mK//T6g89/fRspx1pdbTFSHEibAnWiAGwJt8
      HrY5zU8CWL+dkV5FbOL2SQNjjOtmaLsmO1sM55NDqSgKPMfB146cxMmJqZ6o6Ub3aFAykGYY
      KP7SLyPKjGLeVbBgJ7BUBY1Ot6m2/8oVeNdm4bx7C9L1xd7Uw87ttcG/ioUbvw8W2ZAkievt
      KRnp//7uZfjRmn2+vLzMFzZSAmSzWYyPj2N5eZnv+kmS8ALCm5kzXV2TAv8zv4ZEUnhHIvoO
      acWo+kj6WLu+AzBJhbvv8+gUzyBZnbn9Hhw1wttqXGCp2USUxJgeqW7+4UcESZJwLQ09CFnu
      NvIOw3Dgrkefb7fb8DwPo6OjXCAmfp6ypEi20A+KoiA7MYHk/gyetmYRHzmF0GoijmNUq1W0
      80L/rKyBVqvFB3QcrVfVMhYhSXyo2lorW7rWX/2Jc1wgZ1lWTw6Hqqo8xVFV1Z6q4ttRlYr3
      tve81necoUknYtcmAJNVRMUjsMc/DU8pgqVoT/HBKYrCZdFbhaFpUJPhi9N2E57r4Npr/x28
      zj2cfOF/hKyVUK/XoWnawGi4JEkYHR1Fq9Xi9Y5ITpDP53tsZiq16Ps+N30ymUyP7h4AavYy
      fr/5OwgKNqZefQmPnfsaYOTQbDahP38S5WoBctaAfnIftCRGZ7UGUaZ0HJnCQbidu/w3S+NP
      QjO7/pZhGPA8jzvKNJjJt6lWq/waC4UC2pYDO1RQq7mI4wy0moOxkgn1AewScSJwE1KYUORD
      cJZs5z+1HkH1POLiMSRGBb45gVDOrAq/equ7kTCJsN0+vQBQyu1dFHdYCAMHzfk3EIcdBM4c
      klWlZTabXRfQERcKkWoUK0NTOUiRRaLt33W7jbzz+Tzn6YmHnwvvoc06gArMx/OofPgmHv/q
      zwHo5k74x8e4iE2RJMhyN54QBBJOvPCPMHvpX8Ft30Fh9DHsO/sf8PM2TRO1Wq2nl5vrushm
      s7xChSRJcMMEf/bmXbx6eQ6NTq/TP1HO4uvPHsYLZydX3fKtI73Si+xSLFgfIpU79P4AjuNA
      kiTeCZ4ebBzHPaIs2tZbrRZkWe5ZHT6JYIyh0WigvfI+Iq8GKfc4crk8H7jz8/MwTRO5jA5T
      lbDccjlFms1m0Ww2USgUtizJdl2XD8o0ZF3Cd+e/DcttIvdaA0+/8NdQmT7E36dKEMViEX/4
      xgwWajb+61/6DOK4+zrtLmIkmlSiS0tLfEIXPQ/RX3wPyqlTwFNPAgBuL1r4F3/0PuqdjTPK
      Tu6v4D/5xgXk+zRXo/FEMgxaVIG1HYAmAPkTYlxE9BF2pUHGyMjIlqsxBEGARqOBUqm0af/X
      jyMoMUc0T9JRXXLQgiBAtnMdmj0H//DXuCljmiZc1+1PDycJmBdCyva+HkURPM/roSAJlGhE
      ySgbYb7uwPZCPHP2ECRJQqfT4ZMrTV1LksSFaKVSCe4/+aeIb9wEAOT/h/8eP5ix8G+/e2nL
      67qpK/j7f+NZFLXuYjlSKMASKrwxxrgJKZZsIYifE5NraAIoijJ8Fohm5FZXc9qe++WjfhJg
      2zaazSZv6kfFfEXQSp/P5yFPPYn4+Dd4ZbPNFgXnnVtY+o3v9MRWCLVaDcvLy3D8CFbYLVuz
      uLjIA1RbUeFOjWRxfLorpvNtB9lMlneloQQVcTJkMhnYtt012V54AVKhAPXJJ7ECA7/9o6vb
      Mmq8IMa//u4lxElX1qx12rxGES0YxCRRVltaEkGvEcgsAroLz1B9AM/z0G63US6Xt7xVk6OW
      LoP3SQCpJSmKmiQJSqUSr5KxnQ6Xvu/3Xc0zZw9CmygD8vp7RpHjO7aMeSvC82Mm97WoHmsm
      k+lpRzUIoeNCvbqIBdPD5BOP83PxfR+mafKdpNlsolLpSquV5z6N3JNPgGkafu9H1+EF229o
      eGehjVtLHo4aCu7XHYyfmACTwCuCV6vVgXU/xcFOEGMLQ5dCKJqCycnJbTu0uVyOSwBWlhYx
      MTX9SJcy2SqsVgOubSFhck8ihqIoaDQasCyrp4XRRsjn86jX65wCJUgZHdr+/lHvXC7XZYpi
      YF9eRlZXgcyatIEKSlHCCMGJJFyuRzheVlBaDSwniowFqYWr772OkawJ/dZNOGfOws0XMDEx
      wQcaSTZEBsaybbxxZX1a51Zx8fIiwnsLYHGCo2GMyplJtNttFAoFJEnCZRlpEqFf/ECcEENP
      in934S1O0W0H5DTLsox84dGr7b8TuK4LyAo0M9uXoy6Xy6hWq7z62WZQVRWjo6NYWFiA4zg8
      vXIzGx4ADAV8IAPg6Y6UlESmEA2Ops8wZyVYcXtXz8KZ03jyp/8WtNu3oC4tQp+d5YVtafCJ
      rJOiKNA0DZYXo2XvvI/b/ZoFPduNH2i5bqMPMcLNGOsxgQjp5hkEMtmGvgNYQWdb27qYXE3J
      E/nVSB4hSRK4voOsufdZYzsFDU5JVmA57XVpeLquw7IsmKaJSqUC27a5czzoGsMwhGVZGBnp
      ypLr9ToYY7xJSKFQWBfkoT4KIkjoRn2WSZej6zps24aqqpjKAZ/fr6HQJwFOlmW4584jLpXR
      2b8fstD+aJBPYbkPJku3wwTP/OoXEfsREh24f/8+pqenoUkAUyRUq1UsLi4il8uh0+nwvAPN
      0NBoNHi/Ai5/kIAlx8KxyX3DnQAXJp7gPHX6RlBN0DiOYRgGn8GMdSsBd3nmAI7joOZ5OLSa
      WhfHMe517uCEfmZXqjLsBpaWlngbn36V6USpLq2aVM6xVCr1XCetbrRr0H01DAP1ep2bAfQZ
      KkNJv52uviDKDCgam67EIElSz44hQpIkRMUSorMlWK0WSgMUnCIy+oMNM1NXkC8XoOs62u02
      l8pEnXpXI5WroFKpYHZ1RyJJzax7F6OlCS7wozqicRRCkSVks9nhToBqZhSu6/JmFyJs20a7
      3YYsyxgfHwewti2RtNc0TdiBj//jtZfx33zxx1DKd1fEI6UTcO0OMrmt8+APE5VKZd31px2y
      dRqd1bRASiQhcVi9XkexWOwrERErYxeLRS6XECfJRv24gLViU6QYJWZlM8RxjBqLcWXuHj5/
      5PiG4sWxSg6mrsIL1pdC2Qr2jRa4WUX3ot1uQ6mMdyfzao0hXdcxPjkJx3WxsrKCgxNHMDIy
      wu8d0b+SlEG+0M2uG6oPQA+51WqtU/KR3UoZ+4QkSXDn0nvwVqu3FTNZ/MOf+ClUit1Eifby
      Apqzd3D/pT9Dc3GWD6LA8+A5ax3jHyVQ42oRrcU3Nv0eBQSTJMHy8jJnVAbpo/px8eVyme8o
      /VijNMQIKe0+/e6n53mwLAuNRgP1ep3HAuh6NyItTEPHE8fGBr6/GZ45NdGTNklF0iiYStHn
      TCaDhmUhVLrnoqoqDzQ2Go2+PZmHOgEo4BAEAVZWVtDpdNBoNLC0tNTlb5P1UmhZlnH0/JPI
      rEYPZ1YsJAnjwYp8dRxGeQzlExeQKXZ142EYwmtasBZrePfSD7CycHXXKrftBCT2EgMwxfFn
      ez7D5QyRg7ut2z3vEc8u9jljyfoEokETn5zPrYAxhrm5OZ6Tkcvl4Ps+PM/jKY/NZhOMdUsW
      FovFVQlyHieqY/jKqbOb/pYsy/jJ545B6UPVbobRYgaffezQunEjOu40ATVNQ+K6kJxul6Ll
      5WXuCOfz+b7NE4dqAokl7aIo4nap67rdLTYJubw2LYYjHBlf62NLcmCtUkFpNWlCkrrpgepE
      d6U8vbiEenMJI+N7n/pIu1s6pS8IAiwsLIAxxlP+0hJw+q4pmzhQPNzXPBK/E1geJFmCnu/S
      mOtlwgzYoOy4xBhY6uEz1k2YVxWJywoMw4Bt2zw2QyatGIGmanFklmwGSZJw7sgkfvzpw/iz
      N29v+nmCIkv4la+eQ7nQv9QhtYyl9quFfJ4L8SzLgizLuHnzJo4fPz6wpM3Qu0QSr0wZP41G
      A5n4MuRwCXXpOdy9excRS3B6dAymafYI4WjlTGOQSlJRFGTGLkD1XkIU+FAyG9u7w4bnebh2
      +TIuPPHEOllysVBEEsdYXl5GNtutzylOFNKoE8hZpRwBTdM4myHLMoxiL7tGXXAAAEmMyLWh
      ZNc65KRXZa1RR1gZQYJejjyKIlTcOwiKZS5Vnpqa4oxQNptF2K4DQutTMRVyq1BVFd/62uNo
      2R5evbQ+LzkNWQL+5pfP4rOPH+n7/Ok8yHdUFAXOnY+Q3XcMTDNRKBRQr9eh6zru3buHQ4cO
      9Z2swy2M1QdRFMFZ/Esw9waS3DP4N5draPsefv7IccRxjGPHjj2wBuiD2cvIqCaOjB7cUyeZ
      gndpm7/T6cCqtYE4AbIqVlZWuOOfBuXLEjU6OTkJANyUTK9ciqLw5iLk4Io51lQYKt0iSlRK
      ijvH4uIiNyFM08TU1BTvDEOLjKZp0HW9pwzhTuH7Af7w5Sv4vZeuw/b606NTIzn87a9fwLNn
      DmzpeS4tLcFxHOSzGSSQ0G63eUPtJElQKBRw8ODBvhT9rk8AoDtQvM4cIucuIvMMOpaFAmOI
      dR2jExOb3lTGGBabDWQ0HYXVysbie/OXLyNwI2RHxzB+aGpXr2UrWFxchNVqI+8DbkGDZVlc
      HiDuAtSpsVIoQ1Ik1Bp1rgFqNBrIZrNwHKeHMpYkiYvYqHyiiK2qRuk4juP0iPNs28bk5CSf
      lFS3Z5gxmCRJUGt28PIH93D5bg0rrS4BMlrK4InjE/jcY4eQy259skVRhOvXr+PgwYNckZwx
      TUBaKyowOTnZU1eJsCcTAOh12BzHQdJuIzYMlFYHxqDvUO36WJGxYls4NTnds72HYYjbyx0c
      Hs1zn+Fhw7ZteK4Lyfax7FncvCFJuGmafHUqFouQYgCyhARd9icIAoyPmzkCkAAAIABJREFU
      j/f08U0nciwuLiIv2LzAmu9l2/a64BshSRIsLS1hamoKtVqtW6ZQ9N2YDInFmJrsXZjoWZBJ
      NgxYlgXbtvnxyuXyjnq6JUmCW7du4ciRIwCAmZkZmIaBhDG+IIyOjvbcK8KeJcWLF5XNZtFu
      WtDnWwhzOeh9JiA1bqvX612paxRhTDe57azrOt/OJ9zrQHIBygPU7hwmcrkcdF1HPa4jr+ah
      MwZpfgH+9BSWlpagKArCMMTU1BTa7TY3pSzLwv5xBUytIIyinvLl4gLieR5vHCcyTUB38hE1
      TIVpCZR/rOs6VlZWuOkpkhIxZCSBy9kTEp3RBKAKDsNANpuF67o8p+BBdhrSH0mShIMHD2Jx
      cRHNZhPVapVTpP2w96URV6HFgNLx0Wm2MDt3H+XKCMYnJ6GqKm99SZV9VVXlD4HMBvFGadkJ
      SMpDu5S+0DQNY2NjmJmZQcgSyBPjUNB1BkdGRnjQynEcTE5OcmYolnR4TohcvhvhbcY6WgHD
      0fxaIM11Xc7zi6/RxNB1HfV6HaZpotlscr6cuj2Wy2XUajXO7Kh+A7JXR1g+DgMRrCjE7Ows
      b6QhsnLDFClSfoPruigWi339qa1CLMOuqiqmpqZ4tt1GNO1DGTWSJMHYN4povAx7cQG//e/+
      H0xN78N/9J/+Z7h//z7vS0WUJ3UkEaFIMmRJQpjE8JmOhYVFVKvVTSOfewmKei/cuQ4bKoC1
      tk6KqqNc7jqXURghl82iMDIOxD4SJpgFWoKivlYSnGxz6oIuSRJfHEgGEYYhPM9DJpPpMYVI
      gkEV2oBVWvnybwH3XkH8zd9AxLqBJrHfLkm3txJY2y6y2SynX2cWF6HrOqZ3wDJ5ngfTNHtq
      lfbj/dN4aMsm2esTk5P43Jd+DOOTk9B1HYVCAb7vw5DbULxLMDUgxFk02hKvIiZJErJND0rL
      RftwBWEYotls8sjfw+jlNQjZbBbVfYe7vWrlNf76Xs3BvmqXHs1IGvyODXk0Cxat1cNnjAFJ
      BBlAuBqQArpSiyRJ4Hlet8pDihjQNA0TExO87xeZB279HWRGnkQmk0Gn01mrPnf+b0E68U1E
      bM3UIqk0+Sqqqu5KJW8xpfGDhXnIirLtCSBJEsrlco9cPB0lH/jdvXKCNwI9CKAbspb825AX
      fwPSavlwJmcRjf8d1K0MT7nMSCrUKIGtgTd5zhlZSNqaDDcIAl5tYq+UpIPq2IRhiGa9Bj+M
      +CQloRtFVwH0yJOp8QRpgmibp9TEXC63oUkSBAFs2+YRZdoBaHLVajWei90vqmzbdve+5nI8
      zfVBsFlnSSILNvodWZZ7ykiKgcWlhTkUOlchFaZgTJza8N6QT/NILJV0otQgjS1+hw9+AJAS
      B2r7+2DST/ILdpIQru9CjVW+Gkp2gkCPuzRivY6EMchJAiOX27MmHHEcD8ywyuYLSBto5Ij2
      s1WLxSI3mSj4FL19G9rZA3yCUy1QMlco15eqSKiqinq9zicWLXZkPnU6HU510m9RngBx/xRo
      elC068u4cXcBp08chhY76PgyzEIRjm0hLzwfChAmUYAgkWDqa/eFYhJAd0JRyZZsNotiMIfM
      7A+RqFmEI39vYHlNxhjs5TqcMHg0JgCBtjEt6tOyM2rCLJjwPI/TcVRsiTqqRFEEOWY9LJHa
      amHRsnD48OE9o0hfevNNfPbZZzE3ex+1lUVUx/dhcnIcK4uLKI2OI/YseK6LRMsjdlvIV8b6
      +i5khpCIcGVlBdqxSTBDgclMtFotOI6DKIq4fogYnTSFCXRzhOm4vu9jamoKiqKgXq8jiiJu
      8kwVVTA9hwgqMpnMhnkK/TBIl/XKy6/g5PkLaK2sYH5lGYVsBVOFIt764AN84bnn0FqZx/XZ
      Gg6Ml3Dn9j0cPrgfjShBKVNAbe4GjMoBnD2xVr2CFKgkvlSL+xHl9yHO7Rv4rInVspMQjU7r
      0ZoA/MaZxwCr3vuecYSzH47jIJ/P80QOcvyoa+HCwgKy2W4mlq1pKK3SbXu1C9BWPnNnBooU
      obN4Cx9dvoxrV67g0KknEDVn8NT582jLPm6+85fwjQn87V/6mYHHoy1ejyIsMR/+UpsntlBT
      CmJPBslGAMoR1lDJtGBFY2i32yiVSiiWCmAJeEFbSfYASUIum9v24AfAu0Wm8dRTj+ONi29h
      opBHMH0O4cwNjB49yN+v11bw3uUlxKGFx09O4uLtJt5/6zX88rd+BbWVBuZuzvZMALomUiBn
      MhmoZ/4mwsCH7thQhOxCy7J4PkEUhgg8F9lMZm9qg24FSZJw5ahlfAHMPMrfY5nTsPUX4Hke
      JicnEYYh6vV6T98uMcnmwIEDqFarGBsb40kkW0k7HBY6K/N45bV3kACQEePefA3FUgEHDh/D
      uVNHcfjEKRTzJjxrBYFShqn0V3VGUQTXstdq2kQhyuUySqUSwjBEeaIEo6T18PiDQOVZMpks
      EnUSzWazO3jA8L3GHyKQ1+5PbFRQqIxtiUXpi/Zd/Oafv4rYb+Pf/ebv8ZdvXHoPTZchU6zC
      b9UhKYACoGIq+OEPX0bDdlDJmyhVqjAzeZSLBXz9J76M+3dvIwgkVEd6YxDixKZGHLZtQ5Yk
      REJjQ8YYVlZWcP36dTi2havvvY2r77+D25c/2BsneCvVHhzXxb9/8TJ0VcEzR4uIohA5w4eh
      mwhR4GwEmQqi3HgzKTQJpkhLnpYkDBO0Q20X/XyAMAgQNDrIjo/AsixYloXAc2FkslhZWUF1
      dAQxS2C1rB45AwXO0sEzKphbKBSwvLzMac1YiaAmGm8IPjU19UANAa277+A3XpzFC8dL+PD2
      Mp44XMZv/sGL+OZPfQlM0nB7Zg6aZqKUlQFZRtWUMd+28dbFtzFx+nlk1Rg/+7XP9z22pmnr
      zEUaAysrK7zzPDXrI1n9hx9+2O1l5ruYv3tn7V7t+CqHjHbHxp9fnMGfXbwDTTcQRTFs38Ri
      PYTrdvXdafUkMST9WAMKqFFo3XEcWJaF5eVlrKyscMHUowxV05AdH+mRT+tmhmd9sQRoN9rr
      +PnImYHEepM/AtVDO2hxk1FVVR6FVlaJBKpR+iCDn3Bk/yjeur6I8ZKJuws1XDi4D5YfIvRs
      lMf2wdS6NvqxyQLenXORlYEXPv9FfOrcEUS1Jawvw7sxKLUUAE8RFbvanD17FqOjozDM3ojw
      cDvFb3BymwYkFBkn9xXx1NERSLHPbXwK37fb7b6plgD4wyOqj+g+Ktcn0mX0+TAMea4CSRGG
      oXOhY9+7dQV35puYGBsBWIK7t+6gMFKBlMS4dv0GcrqMi2+/i5HxKehqN5kj7biJ50wVpCnv
      VYyYpgesrJUBKfVaxKBChWlm+O9QIjzdv1KptHOzR0AAE+NjVRw/OIV9+/ZhamoSowcO49DB
      AwjtJlZaFo5OVzBzfwHjR8/iWFXFfEfG4f2TiDpLuHbzBkbHp/D2xTcRySZq92/gxv0VTE9N
      QO2T7EPnS76g2GWHxjb9bWZzYKt50aMTk4+GE0xiJlNRkM+qMM21LY6qfrmuu6EOhfrCiuZQ
      kiRQVA31QMaKB/gxgy5LqJrAqMk47Uf8NKUFDkP2axarsG5/iODscTC7jQ/f/Ajjx47gzvtv
      4eZyExOjVZw5No2Prt3Bpy4c3/R4lO5oWRbP1LJtmzup6Xo3677PAEXV+HfJDCwUCmi327w7
      y1avmzEG13Kgm0a3WbcIRYOBGIZK4jMT2dVNanxyGov2LMLAgqYbkGUJ1+/V/v/2zrQ5jis7
      009WZlVlrahCASA2kiDBfV/VMrvFlq2xR9PtCdsRDofD4fCHmT8xMV/tvzFhO8ITPd66257x
      2O6xRjFSS2qJOyQSBECQIIi1UPuaWbnNh8JNFAiABLhmgfVEMEIiikAV8p57zzn3nPcgOw7D
      w0MwPEi2VMdvljBth2z6CY+mpxnef+iZra+il6S7u5t8Po9hGG4lgUDMVI6dPe+e/p4wAEla
      kwB/ujdA6NOPjIw89/u0Ln5Jkqg6AcaWbCrGeldnpgQhBU73BEgqxrpaeREc7lS57WmWZh/Q
      d+gYQYBogsH+FKZe4s53D8iVcpSPHmZmPseV9y9u+3sqikIymWRqasodkCcW81aXWQJLkgn4
      18of6oUV1K4et4TiRXZ+rVxHVuSNBrCK2ahx794ke/YdRDHKWIE4qXAIxzFp2CGuvL+f//k3
      P0VX4xTzy8QTSQ4OxgnE+ill5zh57iLjd27Q17+PaMCmpluoz/HOhNR+6yT7VkTRnTgFPWMA
      QtWgNahtNBovXOJctgNcW7awtlgTdROuLZlc6FNI+dc3ZmiahmmaL3ESGMzPpYnUFMxagf6+
      JDPpBaSZfv7wj/+I6ekJculFDE1nOVtksKfr+d9ylVgsxvDw8LqKT5EVEjKFm/2+Wt1Cx3Hw
      q+GXEhOQJInkwLOHkyw+usdyWeJgyMf1mw+QfBCP+xm7dpMffPjv+MlP/pahQ2cJySb9Z47y
      aPw6heol3r90FJ/Rz42btzl/6X2sSpp0BaLB7S1XUQdkmia5XM69zRb3RyI4liTJG6UQsKZ/
      I8YHwfabO55Gkv38csmhvg0VDsUHPxySke31RiDLMr29vTs2AFGPLzAMY1s1NM+rWmxFjB+F
      prFqmuZ2iNVqtU1dReEyiQHWTyNEul4FIgDVa2XmF+aYW1oipAyhUuTQ+5dZGr/F1HyGaEgl
      mNqLVUlzdGQvYxOzvPe9ywQV35bxmCic2y5CBEySJDfLJe6P/H6/N04AWIviRVAqhKDEba+Q
      s94OS5qPurm9DI9pw2wFDkbWuxAvmglRFGVdae7roPVoF+6aYNMpk5ZFqVQiEom4JROt8jTC
      fdrOfcJOqBRyPH6ywJ69RyjO3Sevplh68ABfQMWv+Imm+qksP8RSE9z97lsMx0+xXKcvGXE1
      Rl8WoWABrEufup/XKyeAQOS7JctBv/UQI13AP9qPPhAjqKquHmaj0XB36NaFK8syt3Iy6dr2
      ZVK6AhK/1g/2atpMVdUNPbVewrIs0un0pvcfrcppYoELiUSxAMQOLcqnxecU5dPbubd5FuL7
      b/W17ZRVtw4Bf5UIfSqBZ04AQSgUaoowfTZG5ev7ANTvPSb+e1dYUcskk0nC4TDZbHadJEnr
      Q6ubO/NtNctB6ASLhhGvLn5YmwC52UwF0SdQLpfdtLFt2+vcBklqTo4RxYciIyQmu0wsjNMT
      7SUV355y9WbvYSs268t9k9z+5jOeLJc4ceIE3X2D3rkIE4j6dv1Ri5y2A/Z8bt2Uwe7ubqrV
      KsViccNCkHf4zGRJQlr92Vv5yF5BCO+KeiOf7GNRm193x+E4DtFolEQi4WaKWkWiwmqAEM1p
      k4lEgp5Uj6tfBLAvNYIPP98+mXVdBXFfsB3cAPMl/7wOTp09Tyyxhy6/TbWc8Z4BwKpO5VOa
      9/6h1AZXJx6Pu6KnxWLRPQmS6g4H7gUlcOwd58LfFqVSyf1vx3boDw+4vxtN0+jq6nJHzorU
      qajnNwwDvV5FcZpyLIqsUP5uxRUiliSJsBomFomyf3UErWEYlMvlbUmxtwv1fIZCuehNA5Bl
      mf7/+GvErpxAHR0g8aPLBI4MrgvaZGx8qx1WIkgWBjAUeZZG2kb2xqQXmk37NhDKD9ByA+qs
      byaXJAndgj//PxOuelsgECCbzTbVuSNdLNVWZ4SZBtFTPRt8dr+i0BWNuoMMxe1q2+NTGBrs
      I5Lqp7sr6b0gWCDuAzRNcwMXkRaV9CrF+zeJDB9ETg254ruiDyASiXC/KDNTen4mqD/i41y3
      g203ZdtfRPXsTdJoNFhZWdnSTVjn+zsSEs36d1FPZa6qTViWRb1ed4fLybJMKpVyU7EicyRS
      h5Ik0dvb6wnZmZehVCp5OwgWiCyGKM7KZrNomtbMXCgBlHAUObi+ZELUhauqypEuCdP2MVfZ
      2m/tC/s4lXSwLHNd1sTL1Go1VwtTINKX4oJncXHRnSks6uVbY5tCoeDqAYlyiNaB2rCmMiHY
      rg5ou+FZA2hF5IRFbt6S/cSOXXIHPcBaXtctc7YtTiV97IkoPCxa5LU1q+8KSozEffSrNvbq
      4gc8pSixFfF4HMMwNrgjQjHCMAz3QkvIjASDQSSfTN2WUWm4VZIi3btZyYdY7CI2eBHBqnag
      LQwAmg9eZHzEES4Wf6FQcHe/1nlVtm2TUhr09ck4kkLDBr8PfI6FZRk49nql4XY4AcQlVrFY
      XPf3wiWKRqOuGyP8d7/fj+zzNRtvLNzcf09Pz5a3z64cY7WILxzf1Eia8YiBXn5MODHalidE
      W7xjx3HQcjnUpWVUaf1bFmNvYrEY0Wh000Vs2zbYJgFMsIxNL2la04BeR8iVS5LEYkHHdNbv
      zMIYxJ1GoVDAMpufXTSMiNdtRmuZuBOKuRr8T79mdqWIphv4lGjbng5tcQLUM1lyf/pn2Ok0
      8uhBzP/8n6g3Gq6UuBgc55MkYtEo5XJ5Q+fQszI8oq+2XRA7fbFYpD+h4pPAsppa/qqqks9m
      icZiKKs9A6FQiHQ6TSgUwjAMN/DdapK8mAsgCsdkWXbraQSO4xAPSEg4SP7EppInYgC4l2kL
      A9AfPcJOpwGwph8SMUwCXV3ouo7f73eHyy3Nz1KvVjh8+jz5fH5d/VBryTOs3SOIB9wuu7/A
      FX/CwXGan0vMWuju6XFjIqGisWdVhVvcl8DWm0KrHOLM1F1KpsqF00cx9SplXaK7q3nT2zQ8
      C0srk6lL9Dw1w6BVwsQrCJUNsXm2hQGohw5RHR7GnptDOXEckgmwLHfXTiaTzZTenkEss9kR
      pKpN2ZBkMuk+aJHO6+7udl2IdmUzg3X1dFZjI1Ei3Vqc19o99azZY0JfaL5Y52R3g7sLBdLf
      fsn+U5eo18pYtoVVLzK/kOXC+ZPUGgrXvrpB18ABnGqalZLB1Q++/6o/9ksjDEDMWGgPA0gm
      SPzX/4K2uISVTLhTTloJhULNK/t6HXW15DWdTq97+CLw2w0ZDbFLt97OVqtV4vF4U4ZxdQdv
      TX+K35mYIP+sU6+rq4t6vc7K3EP+ZdrP9y/4yengn32IHAjQMBrEgzJnR7t5PLfA5Hye0cPH
      yDyZJBDysycZpKrbxLYuC3priFqoer3eHgYgSRIEAhjdSXRdJyRvvPl8uiVQ6MC0zukVO1u7
      L36BUIcTWS9xDyKkFls/N4CNTU7K0Gf1PdflE/77ibOX6Qn6qJg+uiJZBgb3Mjd9l6ovzMjA
      HgKRIHEsDoZ6yEyPEesdJhXzowYU/DstynpDiNt0T5ZDb4Z4sGJHf7ooq7UQrF6vu80fkUjE
      fb1wfwYGBnaNATQaDebn5wmFQq4kY2tQK6o8oaX+XWoKyW7nmTcaDbdv+kXYTMLEK9Tr9aaG
      0Nt+I9vBMAz3hvfpvt9WfR+fz+emQru7uze4P62T1ncDYoRRPp93laNhbepmtVrFNE1KxSKV
      SgVYG4j9riN6DdrCBRJHlti1JBky5jJ1q0aPv4+ItFZjLtTB+vr61rlFwWDwpZrcvYoYrA3N
      Xe2JNc294m2icpxT/kvUc3Xs1ckuL1ruPXn3FjMLBU6fPMzE5CR9Q4c5cXgvt775nJImc/Hc
      Ma7dGOPIybPknkyiKzEunj3xOj7uK0O4w21hAJZloet6s95Htvm/+X9iSZ8DQEbmcvIqh4Mn
      cRzHlUTP5/PuLNtQKPRK9G68iKj30TQNwjZfpD/BxiJLGp8kc6XnIxqNBv7V2Qsv8jsYPXqS
      XOZLQrEkChb6av9FvVLHlFRu3boJPoXiyhx3ph4ztHcE2qCyVlGU9nCBRK4+m81yv37HXfwA
      FhbXCp9TtcuuFIZvLk8qEnfFdEXr325EkiTXz26gY7N2y121yu7JGYvFdtRMvobD7etfc+TC
      91AckwuXL5NZWgBg9ORZ9sVMqmaAA8fPspJJ07dnLwEMbO+v/+a9ydt+E9vBsiy3GG5ZX9j4
      dcckZ6xQq9UI4iP3sy9pTMy7ihK7dfG34vP5iDldDKkjAMiSwsnoeaCZ0nwZZWw1EOTO9Rs0
      LJNbt+/y3nunufPdFJJZQ4uO8PFHH1Cen+bC965y4eggvUMH3Gk4Xsa27fbIAhWLRVZWVlBV
      lZv6F0xV7254zW/3/SFJXw/BYBCrUMEKKkiK7I7ebHee1Y4osmS2baP4ZXJGhrASJaEmt13G
      vFl/gWimf1HEyCqvUiqVvB8DiIEGoqzhROQcM7UpDGftwewLjdKt9MJqSUBi78D60uhdQLlc
      fubXW6tZU/7mVHpd17ctC79Zs7qY37VbicVi3neBGo2GK3gKEHHi/Kj3DzgWPcO+0EHeS1zl
      avJjWPU5hWr0q55u/raZnx7n3z79lNml3IavlZfnyNUNJifvr/v7f/n5X5PXLO7fvMb9R/MA
      VHJZdG+LYr8xPKUM14qu688dqLYTdqK65lUmx65xa+IJ584c4atf3UGNJ4gHZboNWDSXydNP
      r1LCrBQZufI7DMkZbk8sEgh3ce+LTzh65iSPVkrs80cJH+lmaSbLqWP7+dnf/4zLv/G7fHTl
      7K7aMLaLZw1gZX6SW9NFrr53+rmvzy4v0dXbTyGfoye1sad3NxjAo6n7ZPMZ5p4socsxZMnA
      b+poS0UOvT9KWoujmgVODYaZMPfjm7vGbNGgYUB/OMzxYwOkiWHcn6S2RyVAFKuwTNGysX1B
      fufj3+wYgFfQdZ1fff7/KJtweTTJ/7q2yOhAiGx6ma7UCHOL0+wZHqH0ZA4nFENLP2Dw7FUc
      o4xTLZIv1blw8Tzf/OorDp66xHtnjr11A3hZtbXsyjKLyxn6Bwcp51YIRBPQqFHVbHr6Eqws
      Z0gkEwQVCcNRsMzmBEld08CBgF/GwodjGMhqgJWlJRLJJPlCmWQyTl9vX8cAvIKu1/nJX/wF
      ss/h4NHDyP1nqDy6wcG9Cb78appaOMbpwwM0yiCjYeglDl/8ATdufE08FKY/HmJufomSoaNJ
      Mf7gx7/x1g2gkJkBSSKR2v/c127G0y2Qr5rdelH4PLwZ4lsmH/74d0lEAhSyGQJdAUrVBH/3
      j59w9cd/gp2bIpUaILxHQcJGkS2mHz7izPHjKLJMUJHp6t3DxINZDoy+2IJ7HuLWebtIShTY
      2bA+Mebp6Z+bz+dd+ZZqMctSQWP/QDdT0485dOQIDye+wx/t5eC+AWxT48HMIodHR1iYfUSs
      dwizkiVTMTl8YB/v4Jpfh0dPgI1BsGk0qGkNYtHojh/a64gBbNsmn02zuJxjcGhw9eLHoV7T
      CIU31hxpmoYaDFBvGIRWf9+apj1TALZ1CqY4AbJLs3x6/S6//9v/AcfS+ed//jcOHjtJd1hB
      qxVZrDSYm5rlg49+nb7uONe/+JxUb4zFFRNfSEWvlDl57AAPxu8ycvYK/Ynme31XTwDPpkG1
      WpVqrWVavARqKIQkNdv8tHqVQqGA3mg2hBi6Rl1v7sgNXcOyHRzbQtNf/CLnefzql7+kXqtQ
      qlT55qsvyZVqZNN5Fp9Mc/3WGHc+/yd++sk3ANy6cQOMOl9/e59Hk9/xaC7NrRs3qBUzXLv5
      LZVSjps3rpMp1rh35xoz8yub/sxU/z4GUs2cvWNoaMjMzjxAVmRmlkqcOX6cS5fOcPPm9eZr
      ZJWRQwcozC0xMLSPcEDB5xisFKr4Fc8+/jfGGxmSt1Msy2Jy/Fu+/uoWB04cRcHhi1/8nCVN
      IaDl+IdPPmNfXzcTY9dY0sLs3RPjs08+YXJ6jtHRYf7Hn/8lvaMnmJ+4zjd3Fzh9fPSVS544
      jkNQgfH795DlEOnMArNzKzTKGvlKjp6wA2qUgdGzpCIKY9e+YH45Tdm2mbj+HZlKlXgowMT4
      XfLpRaqmTWpohIX5OYqZJcanpjl/9oz7voXrtDAzya2xu0QiYcqmH18tj+FTKWUX0U2LUDDI
      w0czROIp9HqZZFjm6+v3OPeD95m4/Q2h7j1oxQz1hsXA3v2EA81n3+4toi+Kt1Z+C5GwSsO2
      8TnwePwayxUJeWGW2bEVJFsnkhrCF57nvdP7gQqxrhGGqPKLT/4VfyzGg/E7LMwtopsyr6su
      K5fP4ff7KZXKyP4QaiBEJBBBjceIBCHoCzJ2b4zDP7zM3tHjnDl5lOtTjwntLdCz7wCyUSOm
      DpGtmvT3dtMVi6BXZHI1SCRim/7MwZEj/PHIEXStik8JMTL44YbX7N27D3CoVmpEohGGDzVL
      k/t/87fc15x8Hb+QNsSjMUCNX376KUvpAicvXKC3J0Etu8BMVuPo/mHujN3g8vlzPJgrcero
      EAvLeWbGb1O0VD78/kUe3b9HuP8gSRVu353mR//+119LDPC88oSXpTUGeBPCve/iCeBRA1gL
      grPZDN3dqS0fTqNaRPOFiYe2XuCvKwh+kwbQ4fXgSRdIDI2u1+sEgyr5fH5db6noaxUygc/D
      C5KHd65/ScEMcvX9izuSbu/wevFkGsDn87nDGnRddyfGiz9iRNB2/3jhaD959iK+cpndM2Ji
      d+BJA4C1+QBCok8QCARIJpNt1uTicP3rrzjxvfd4Vx0aMWfAa3h2FYkF3ur6+Hw+VFVts8UP
      YGLoBvfG7rILZqy8EF4tT/dkDABrymflcplAIOAufi/pzGw/tpD58Lc+3vH39+KCeVG8EIdt
      hqcNQOj8CEEn/6ra8WZYlkW99AR/qIeg+vw5tK/i/W1n3m0Hb+M5AxAKZsJf7OnpYXl5GWjW
      zgwODm5o03McpykM61Nx8L2Ur9l+7lWHl8Fz9wCapu2oYvJVoijKttKqHXYPntzu/uHnf8M3
      t75z///R1Lc8nplisWSAvsLt8Y3SKABYBvenHwIGY7fXlCNuj93e8mdN3Z98baUSHbyP51wg
      gHKlyrAsc+Pzf+XTO7N8/IPT+P0G1+99xpUzw1RrAf733/0VS2YX+1MypZrBsQMjPEmnCXbt
      4dioTbVa5af//b+x/9wP0apVZsZv8vf/+As+/OAjls0qyUCYUiGcjHqRAAACDElEQVRDuQoL
      s+NowX5+9FFTz14oSu+mILTD5njyBBgePcbFM0fJlXT2pCJYtoPkk1H9AUzHAb2AHuwlbDsk
      +wY5d+oIlWKNgeEhZGltPz919gJzjx/jAPNLK5w9Nky+ApevfIAqVfGHuuiKhRg9eoLaygL6
      6j/txAHvDp6MAQrFIiFVpZjLYKAQi6hNCQvZj6nXkOQg5UKGQCiOGlTw+ZqiTivpDIlUilDQ
      j6bpaNUSBCKofhnH1KnUDaKRGIFQALPRoF4pYcsqqmJT1myG+ns7McA7hicNoBMEd3hTeDIG
      eBFWFp9gKlGCdo1M1er0u3bYFrvC2dXyC3x9Z6KpICfJZB9PkS6/OmGtDruXXWEApUyGcDzF
      5P1xfLZBplT17HyqDt5iVxhAz8goTmWFaFeShYVFVDVEJ7nfYTt0guAWOkHwu4fnguBgMPiC
      k0w6dNg5njOAV3X7KipIO3R4FrsiBtiMzuLvsB12rQF06LAddo0BvAndnA67j11jAJIkuQO1
      RVNNhw7PY9cYgGma1Ov1lx5E0eHdoq0NwLZtLMty5VP8fn+nlLnDjvBcGnSn2LaNYRiEQqFd
      PdKzw0aEq/sym15bb5dCnzMQCHQW/ztIo9FA13VXREGM091J/KcYRnuK9TlOc1CGMIL2FMxq
      T4Tb+bZlJxuNhmsE4n0JPamt3GHbtmk0Gu48hP8PMtLtYvzwEyUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Cases and Total Deaths' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Deaths' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total cases/Serious, Critical' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='pie' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='pie_2' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
